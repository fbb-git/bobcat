// About compiling the bobcat library on BSD/MacOSX:
//
// According to Karel Kubat (karel at e dash tunity dot com) the bobcat
// library won't compile under BSD/MacOSX if the Linux options to create
// the dynamic library are used. Instead of 
//      -shared -Wl,-z,def,-soname,
// Karel suggests to use:
//      -dynamiclib -Wl,-single_module
//
// Also, he suggests to use the name libbobcat.dylib instead of
// libbobcat.so.1 
//
// In the directory ./contrib the script c-conf is found which is provided
// by Karel and which might be useful to construct the libraries under
// BSD/MacOSX systems. Don't contact me if you experience any problems
// with Karel's script. Instead, contact Karel directly.
//===========================================================================

    // Remove this #define to prevent the construction of the shared library 
#define BUILD_SHARED

    // The name of the C++ compiler
#define CXX         "g++"
//#define CXX         "g++-5"

    // Specify compiler options that should be used.
    // This is overruled by the environment variable CXXFLAGS
    // The options "-isystem tmp" must always be used, are set in
    // icmake/library and should not be altered.
#define CXXFLAGS    "--std=c++14 -O2 -Wall -fdiagnostics-color=never"

    // Classes requiring the -pthread compiler option
#define PTHREAD     "sharedmutex sharedblock sharedmemory sharedsegment " \
                    "process processdata semaphore"

    // Specify linker options that should be used when creating the shared
    // library
#define LDFLAGS    "-lpthread"

    // The following /bin/cp options are used to keep, rather than follow
    // symbolic references. If your installation doesn't support these flags,
    // then change them into available ones.
    //   -P, --no-dereference
    //            never follow symbolic links in SOURCE
    //   --preserve[=ATTR_LIST]
    //          preserve   the   specified   attributes   (default:  
    //          mode,ownership,timestamps), if possible  additional  
    //          attributes:  context, links, all
    //   -d     same as --no-dereference --preserve=links
#define CPOPTS  "-d"


    // BASE=is the directory below which ALL bisonc++ files will be stored.
    // For an operational non-Debian installation, you probably must be
    // `root', and BASE "/usr" or BASE "/usr/local" is suggested (see
    // below). `BASE' itself is not used outside of this file, so feel free to
    // define BIN, SKEL, MAN and DOC (below) in any which way you like.
#define BASE "/usr"

// All remaining directory locations are relative wrt BASE. 
// With 'build install' you can dynamically specify locations before BASE.
// By remove one or more of the following #defines you prevent the 
// installation of those elements

    // DOC is the directory in which all standard documentation will be stored
    // in this directory the non-development related information is stored. It
    // is not used if not defined (or defined empty)
#define DOC     "/share/doc/libbobcat4"

    // DOCDEV is the directory in which all other documentation will be stored
    // In this directory the development related information is stored
#define DOCDEV  "/share/doc/libbobcat4-dev"

    // the directory in which the header files will be stored
#define INC     "/include/bobcat"

    // the directory in which the bobcat libraries will be stored
#define LIB     "/lib"

    // MAN is the directory in which the manual pages will be stored
    // They are stored below man3 and man7
#define MAN     "/share/man"

