includefile(include/header)

manpage(Bobcat)(7)(_CurYrs_)(libbobcat-dev__CurVers_-x.tar.gz)
                  (C++ Classes)

whenhtml(center(htmlcommand(<img src="bobcat.jpg">)))

manpagename(Bobcat)(Overview of classes in the Bobcat library)

manpagedescription()      
    The classes of the bf(Bobcat) library may be used after including 
    bf(bobcat/classname) in sources. 

    All classes and other elements are defined in the bf(FBB) namespace. For
some classes  em(manipulators) are available, which are defined in the bf(FBB)
namespace. An overview of all manipulators defined in the bf(FBB) namespace is
provided by bf(man -e bobcat manipulators).

    Next to this section the section bf(CATEGORIES) groups classes that
    somehow belong together in various categories.

    The following classes and template functions are available:

    bf(FBB::Align): Specifies bf(Table(Buf)) column and element
    alignments.nl()
    Manpage(align)

    bf(FBB::Arg): Interfaces the command line arguments, allowing for
    short- and long options. The class is implemented as a tt(Singleton).nl()
    Manpage(arg)

    bf(FBB::ArgConfig): Inherits from bf(Arg) and bf(ConfigFile) allowing for
    options to be specified as command line options and/or configuration file
    options.  The class is implemented as a tt(Singleton).nl()
    Manpage(argconfig)

    bf(FBB::A2x): Ascii-to-x conversions of any type supporting extractions
    from bf(i[string]stream) objects. 
    Manpage(a2x)

    bf(FBB::BigInt): Wrapper class around the openssl BN_ functions for
    unlimited integer precision arithmetic. nl()
    Manpage(bigint)

    bf(FBB::binary_search): A modification of the STL tt(binary_search)
    algorithm returning the location of the searched value in a sorted series
    of values. nl()
    Manpage(binarysearch)

    bf(FBB::BinOps): A series of function templates implementing binary
    operators for classes that implement the matching binary assignment
    operators themselves. nl()
    Manpage(binops)

    bf(FBB::CGI): a class implementing the facilities accessing the data made 
    available through the Common Gateway Interface.nl()
    Manpage(cgi)

    bf(FBB::Cidr): a class testing whether IP4 Internet addresses belong to
    address ranges defined by Classless Inter-Domain Routing (CIDR) address
    block specifications.nl() 
    Manpage(cidr)

    bf(FBB::ClientSocket): a socket for tcp-communication with a server.nl()
    Manpage(clientsocket)

    bf(FBB::CmdFinder): Command-function associations.nl() 
    Manpage(cmdfinder)

    bf(FBB::CmdFinderBase): Base class for bf(CmdFinder).nl() 
    Manpage(cmdfinderbase)

    bf(FBB::ConfigFile): Processing standard configuration files.nl() 
    Manpage(configfile)

    bf(FBB::DateTime): Manipulations with date and time values.nl()
    Manpage(datetime)

    bf(FBB::DecryptBuf): Decrypting information.nl()
    Manpage(decryptbuf)

    bf(FBB::DiffieHellman): Computing shared keys using the Diffie-Hellman
    algorithm.nl() 
    Manpage(diffiehellman)

    bf(FBB::DigestBuf): Computing message digests.nl()
    Manpage(digestbuf)

    bf(FBB::EncryptBuf): Encrypting information.nl()
    Manpage(encryptbuf)

    bf(FBB::Exception): objects of this class accept tt(ostream) insertions,
    and are also tt(std::exception) objects.nl()
    Manpage(exception)

    bf(FBB::Fork): Defines bf(fork)(2) as part of a Template Algorithm Design
    Pattern. nl()
    Manpage(fork)

    bf(FBB::GetHostent): Obtains bf(hostent) struct from hostname or
    -address. nl()
    Manpage(gethostent)

    bf(FBB::Glob): Obtain a list of files matching a certain pattern.nl()
    Manpage(glob)

    bf(FBB::HmacBuf): Computing HMAC message digests.nl()
    Manpage(hmacbuf)

    bf(FBB::Hostname): Derived from bf(Hostent), allows the initialization
    from a bf(std::string), or from an bf(FBB::InetAddrress). nl()
    Manpage(hostname)

    bf(FBB::IBase64Stream): stream implementing base64 encoding and decoding,
    using a bf(FBB::Base64Streambuf) stream buffer.nl() 
    Manpage(ibase64stream)

    bf(FBB::IBase64Streambuf): bf(FBB::IFilterStreambuf) specialization
    implementing base64 encoding and decoding.nl()
    Manpage(ibase64streambuf)

    bf(FBB::IFdStream): stream extracting information from a device whose
        file descriptor is available. nl()
    Manpage(ifdstream)

    bf(FBB::IFdStreambuf): Input stream buffer initialized by a file
        descriptor.nl()
    Manpage(ifdstreambuf)

    bf(FBB::IFilterStreambuf): bf(std::streambuf) specialization implementing
    an bf(std::istream) filtering design pattern.nl()
    Manpage(ifilterstreambuf)

    bf(FBB::Indent): Class and manipulators performing text indentation. nl()
    Manpage(indent)

    bf(FBB::InetAddress): Base class (no public constructor) for objects
    representing an internet address as used with sockets. Contains address
    and portnumbers. nl()
    Manpage(inetaddress)

    bf(FBB::IOStream): class combining bf(std::istream) and bf(std::ostream)
    features. nl()
    Manpage(iostream)

    bf(FBB::IOStreambuf): bf(std::streambuf) specialization allowing combined 
    input and output operations. nl()
    Manpage(iostreambuf)

    bf(FBB::IRandStream): stream to extract random numbers from. nl()
    (Manpage: bf(man -e bobcat irandstream))

    bf(FBB::ISymCryptStream): stream implementing symmetric encryption and
    decryption, using a bf(FBB::ISymCryptStreambuf) stream buffer.nl()
    Manpage(isymcryptstream)

    bf(FBB::ISymCryptStreambuf): bf(FBB::IFilterStreambuf) specialization
    implementing symmetric cryptography.nl()
    Manpage(isymcryptstreambuf)

    bf(FBB::Hash...): Various template classes implementing mapping containers
    using hashing.nl()
    Manpage(hash)

    bf(FBB::Hostent): Wrapper around the bf(hostent) struct. nl()
    Manpage(hostent)

    bf(FBB::level): Manipulator setting the log-level of bf(FBB::Log)
    objects.nl() 
    Manpage(level)

    bf(FBB::lm): Manipulator setting the left margin of bf(FBB::OFoldStream)
    objects.nl() 
    Manpage(lm)

    bf(FBB::LocalClientSocket): a Unix domain socket for 
    tcp-communication with a Unix domain (local) server.nl()
    Manpage(localclientsocket)

    bf(FBB::LocalServerSocket): defines a Unix domain socket to which
    clients on the local host can connect.nl() 
    Manpage(localserversocket)

    bf(FBB::LocalSocketBase): Base class for bf(LocalClientSocket) and
    bf(LocalServerSocket). 
        nl()
    Manpage(localsocketbase)

    bf(FBB::Log): bf(std::ostream) handling log messages.nl()
    Manpage(log)

    bf(FBB::LogBuffer): bf(std::streambuf) handling log messages.nl()
    Manpage(logbuffer)

    bf(FBB::MailHeaders): extracts mail headers from SMTP-email.nl()
    Manpage(mailheaders)

    bf(FBB::Mbuf): bf(std::streambuf) specialization for inserting messages,
    mainly used by bf(FBB::Mstream) objects. nl()
    Manpage(mbuf)

    bf(FBB::Milter): interfaces the sendmail mail filter facilities.nl()
    Manpage(milter)

    bf(FBB::mlm): Manipulator modifying the left margin of
    bf(FBB::OFoldStream) objects.nl() 
    Manpage(mlm)

    bf(FBB::Mstream): Inserts messages into streams. nl()
    Manpage(mstream)

    bf(FBB::MultiStreambuf): bf(std::streambuf) specializations performing
    insertions to multiple bf(std::ostream) objects.nl()
    Manpage(multistreambuf)

    bf(FBB::OFdStream): stream inserting information into a device whose
        file descriptor is available. nl()
    Manpage(ofdstream)

    bf(FBB::OFdStreambuf): Output stream buffer initialized by a file
        descriptor.nl()
    Manpage(ofdstreambuf)

    bf(FBB::OFilterStreambuf): bf(std::streambuf) specialization implementing
    an bf(std::ostream) filtering design pattern.nl()
    Manpage(ofilterstreambuf)

    bf(FBB::OFoldStream): bf(std::ostream) using an bf(OFoldStreambuf) as its
    streambuf. nl()
    Manpage(ofoldstream)

    bf(FBB::OFoldStreambuf): bf(OFilterStreambuf) (bf(std::streambuf))
    specialization folding text lines between left and right margins.nl()
    Manpage(ofoldstreambuf)

    bf(FBB::OHexStreambuf): bf(OHexStreambuf) (bf(std::streambuf))
    specialization inserting characters into a stream by their hex values.nl()
    Manpage(ohexstreambuf)

    bf(FBB::OneKey): Single keystroke input, not requiring `Return'.nl()
    Manpage(onekey)

    bf(FBB::Pattern): Performs regular expression pattern matching.nl()
    Manpage(pattern)

    bf(FBB::Pipe): Defines a system level pipe. nl()
    Manpage(pipe)

    bf(FBB::PrimeFactors): Performs the prime-number factorization of (BigInt)
    values.nl()
    Manpage(primefactors)

    bf(FBB::Process): Runs child processes, defining pipes between parents and
    child processes. nl()
    Manpage(process)

    bf(FBB::PtrIter): Input iterator whose dereferenced value returns a
    pointer rather than a reference to an element. Also offers: a tt(ptrIter)
    function template. nl()
    Manpage(ptriter)

    bf(FBB::Randbuffer): implements a bf(streambuf) generating random 
    numbers. nl()
    Manpage(randbuffer)

    bf(FBB::Ranger): class creating ranges that are accepted by range-based
    for-loops. Also offered: a tt(ranger) function template. nl()
    Manpage(ranger)

    bf(FBB::ReadLineBuf): implements a bf(streambuf) using the Gnu
    tt(readline) library to allow editing an tt(std::istream)'s contents. nl()
    (Manpage: bf(man -e bobcat readlinebuf))

    bf(FBB::ReadLineHistory): provides access to the history of lines read
    from a tt(ReadLineBuf). nl()
    (Manpage: bf(man -e bobcat readlinehistory))

    bf(FBB::ReadLineStream): tt(std::istream) class using a tt(ReadLineBuf) 
    for its tt(std::streambuf). nl()
    (Manpage: bf(man -e bobcat readlinestream))

    bf(FBB::Redirector): Defines system level file redirection. nl()
    Manpage(redirector)

    bf(FBB::repeat): Two short extensions of the STL
    tt(for_each) generic algorithm. nl()
    Manpage(repeat)

    bf(FBB::Selector): Offers timed delays and multiple file I/O. nl()
    Manpage(selector)

    bf(FBB::ServerSocket): defines a socket to which clients can connect.nl()
    Manpage(serversocket)

    bf(FBB::Signal): Defines signals, allowing signal handlers to use object's
    data members c.q. to call object's members functions. nl()
    Manpage(signal)

    bf(FBB::SocketBase): Base class for bf(ClientSocket) and bf(ServerSocket).
        nl()
    Manpage(socketbase)

    bf(FBB::Stat): Determines file characteristics.nl()
    Manpage(stat)

    bf(FBB::String): Offers extended bf(std::string) functionality.nl()
    Manpage(string)

    bf(FBB::StringLine): Offers tt(operator>>) extracting lines from
        tt(std::istream) objects.nl()
    Manpage(stringline)

    bf(FBB::Syslogbuf): streambuf to
        Buffer generating bf(syslog)(3) messages. nl()
    Manpage(syslogbuf)

    bf(FBB::SyslogStream): stream to
        Output stream inserting bf(syslog)(3) messages. nl()
    Manpage(syslogbuf)

    bf(FBB::fswap): templates implementing memory bytes based swap
        functionality nl()
    Manpage(fswap)

    bf(FBB::Table): Display tables row- or column-wise.nl()
    Manpage(CHAR(t)able)

    bf(FBB::TableBuf): Display tables row- or column-wise.nl()
    Manpage(CHAR(t)ablebuf)

    bf(FBB::TableLines): Support class for the class bf(Table(Buf)).nl()
    Manpage(tablelines)

    bf(FBB::TableSupport): Support class for the class bf(Table(Buf)).nl()
    Manpage(tablesupport)

    bf(FBB::TempStream): Temporary fstream. nl()
    Manpage(tempstream)

    bf(FBB::TypeTrait): Traits class template to determine various
    characteristics of types.nl()
    Manpage(typetrait)

    bf(FBB::User): Determines the current user's parameters from
    tt(/etc/passwd).nl()
    Manpage(user)

    bf(FBB::Xpointer): sets and retrieves the X-windows pointer.nl()
    Manpage(xpointer)

    bf(FBB::X2a): x-to-Ascii conversions of any type supporting insertions
    into bf(o[string]stream) objects.nl()
    Manpage(x2a)


COMMENT(
    bf(FBB::IPipe): A class around bf(pipe)(2) for extraction. nl()
    (Manpage: bf(man -e bobcat ipipe))

    bf(FBB::NonCanon): allows direct keyboard input.nl()
    (Manpage: bf(man -e bobcat noncanon))

    bf(FBB::OPipe): a class around bf(pipe)(2) for insertion. nl()
    (Manpage: bf(man -e bobcat opipe))

    bf(FBB::SHMQueue): P.M. mplements a (optionally persistent) shared memory
    queue.nl()
    (Manpage: bf(man -e bobcat pattern))

    bf(FBB::sequence_includes()): Template function implementing a variant of
    the bf(includes()) generic algorithm, not requiring sorted series.
    (Manpage: bf(man -e bobcat sequenceincludes))

    bf(FBB::SerialRecord): defines a pure interface for serializing
        the non-consecutivel stored information of objects.nl()
    (Manpage: bf(man -e bobcat pattern))

END COMMENT)

manpagesection(CATEGORIES)

    This section groups classes that somehow belong together. The following
categories are offered:
    itemization(
    it() bf(COMMAND LINE INTERFACE AND CONFIGURATION FILES)
    it() bf(CONVERSIONS)
    it() bf(DATE AND TIME)        
    it() bf(ERRORS AND MESSAGE HANDLING)
    it() bf(GENERIC ALGORITHM EXTENSIONS)
    it() bf(INTERNET / NETWORKING)
    it() bf(OPENSSL AND ENCRYPTION)
    it() bf(PATTERN MATCHING)
    it() bf(PROCESSES AND SIGNALS)
    it() bf(STREAMS AND FILES)
    it() bf(TABLES)
    it() bf(VARIOUS OTHER CLASSES)
    it() bf(DEPRECATED CLASSES)
    )    

    itemization(
    it() bf(COMMAND LINE INTERFACE AND CONFIGURATION FILES)


    bf(FBB::Arg): Interfaces the command line arguments, allowing for
    short- and long options. The class is implemented as a tt(Singleton).nl()
    Manpage(arg)

    bf(FBB::ArgConfig): Inherits from bf(Arg) and bf(ConfigFile) allowing for
    options to be specified as command line options and/or configuration file
    options.  The class is implemented as a tt(Singleton).nl()
    Manpage(argconfig)

    bf(FBB::CmdFinder): Command-function associations.nl() 
    Manpage(cmdfinder)

    bf(FBB::CmdFinderBase): Base class for bf(CmdFinder).nl() 
    Manpage(cmdfinderbase)

    bf(FBB::ConfigFile): Processing standard configuration files.nl() 
    Manpage(configfile)


    it() bf(CONVERSIONS)

    bf(FBB::A2x): Ascii-to-x conversions of any type supporting extractions
    from bf(i[string]stream) objects. 
    Manpage(a2x)

    bf(FBB::BigInt): Wrapper class around the openssl BN_ functions for
    unlimited integer precision arithmetic. nl()
    Manpage(bigint)

    bf(FBB::IBase64Stream): stream implementing base64 encoding and decoding,
    using a bf(FBB::Base64Streambuf) stream buffer.nl() 
    Manpage(ibase64stream)

    bf(FBB::IBase64Streambuf): bf(FBB::IFilterStreambuf) specialization
    implementing base64 encoding and decoding.nl()
    Manpage(ibase64streambuf)

    bf(FBB::X2a): x-to-Ascii conversions of any type supporting insertions
    into bf(o[string]stream) objects.nl()
    Manpage(x2a)


    it() bf(DATE AND TIME)        
    
    bf(FBB::DateTime): Manipulations with date and time values.nl()
    Manpage(datetime)

    it() bf(ERRORS AND MESSAGE HANDLING)

    bf(FBB::Exception): objects of this class accept tt(ostream) insertions,
    and are also tt(std::exception) objects.nl()
    Manpage(exception)

    bf(FBB::level): Manipulator setting the log-level of bf(FBB::Log)
    objects.nl() 
    Manpage(level)

    bf(FBB::Log): bf(std::ostream) handling log messages.nl()
    Manpage(log)

    bf(FBB::LogBuffer): bf(std::streambuf) handling log messages.nl()
    Manpage(logbuffer)

    bf(FBB::Syslogbuf): streambuf to
        Buffer generating bf(syslog)(3) messages. nl()
    Manpage(syslogbuf)

    bf(FBB::SyslogStream): stream to
        Output stream inserting bf(syslog)(3) messages. nl()
    Manpage(syslogbuf)



    it() bf(GENERIC ALGORITHM EXTENSIONS)

    bf(FBB::binary_search): A modification of the STL tt(binary_search)
    algorithm returning the location of the searched value in a sorted series
    of values. nl()
    Manpage(binarysearch)

    bf(FBB::repeat): Two short extensions of the STL 
    tt(for_each) generic algorithm. nl()
    Manpage(repeat)



    it() bf(INTERNET / NETWORKING)

    bf(FBB::CGI): a class implementing the facilities accessing the data made 
    available through the Common Gateway Interface.nl()
    Manpage(cgi)

    bf(FBB::Cidr): a class testing whether IP4 Internet addresses belong to
    address ranges defined by Classless Inter-Domain Routing (CIDR) address
    block specifications.nl() 
    Manpage(cidr)

    bf(FBB::ClientSocket): a socket for tcp-communication with a server.nl()
    Manpage(clientsocket)

    bf(FBB::GetHostent): Obtains bf(hostent) struct from hostname or
    -address. nl()
    Manpage(gethostent)

    bf(FBB::Hostname): Derived from bf(Hostent), allows the initialization
    from a bf(std::string), or from an bf(FBB::InetAddrress). nl()
    Manpage(hostname)

    bf(FBB::InetAddress): Base class (no public constructor) for objects
    representing an internet address as used with sockets. Contains address
    and portnumbers. nl()
    Manpage(inetaddress)

    bf(FBB::Hostent): Wrapper around the bf(hostent) struct. nl()
    Manpage(hostent)

    bf(FBB::LocalClientSocket): a Unix domain socket for 
    tcp-communication with a Unix domain (local) server.nl()
    Manpage(localclientsocket)

    bf(FBB::LocalServerSocket): defines a Unix domain socket to which
    clients on the local host can connect.nl() 
    Manpage(localserversocket)

    bf(FBB::LocalSocketBase): Base class for bf(LocalClientSocket) and
    bf(LocalServerSocket). 
        nl()
    Manpage(localsocketbase)

    bf(FBB::MailHeaders): extracts mail headers from SMTP-email.nl()
    Manpage(mailheaders)

    bf(FBB::Milter): interfaces the sendmail mail filter facilities.nl()
    Manpage(milter)

    bf(FBB::ServerSocket): defines a socket to which clients can connect.nl()
    Manpage(serversocket)

    bf(FBB::SocketBase): Base class for bf(ClientSocket) and bf(ServerSocket).
        nl()
    Manpage(socketbase)


    it() bf(OPENSSL AND ENCRYPTION)

    bf(FBB::BigInt): Wrapper class around the openssl BN_ functions for
    unlimited integer precision arithmetic. nl()
    Manpage(bigint)

    bf(FBB::DecryptBuf): Decrypting information.nl()
    Manpage(decryptbuf)

    bf(FBB::DiffieHellman): Computing shared keys using the Diffie-Hellman
    algorithm.nl() 
    Manpage(diffiehellman)

    bf(FBB::DigestBuf): Computing message digests.nl()
    Manpage(digestbuf)

    bf(FBB::EncryptBuf): Encrypting information.nl()
    Manpage(encryptbuf)

    bf(FBB::HmacBuf): Computing HMAC message digests.nl()
    Manpage(hmacbuf)

    bf(FBB::ISymCryptStream): stream implementing symmetric encryption and
    decryption, using a bf(FBB::ISymCryptStreambuf) stream buffer.nl()
    Manpage(isymcryptstream)

    bf(FBB::ISymCryptStreambuf): bf(FBB::IFilterStreambuf) specialization
    implementing symmetric cryptography.nl()
    Manpage(isymcryptstreambuf)


    it() bf(PATTERN MATCHING)

    bf(FBB::Glob): Obtain a list of files matching a certain pattern.nl()
    Manpage(glob)

    bf(FBB::Pattern): Performs regular expression pattern matching.nl()
    Manpage(pattern)



    it() bf(PROCESSES AND SIGNALS)

    bf(FBB::Fork): Defines bf(fork)(2) as part of a Template Algorithm Design
    Pattern. nl()
    Manpage(fork)

    bf(FBB::Process): Runs child processes, defining pipes between parents and
    child processes. nl()
    Manpage(process)

    bf(FBB::Signal): Defines signals, allowing signal handlers to use object's
    data members c.q. to call object's members functions. nl()
    Manpage(signal)


    it() bf(STREAMS AND FILES)

    bf(FBB::DigestBuf): Computing message digests.nl()
    Manpage(digestbuf)

    bf(FBB::IFdStream): stream extracting information from a device whose
        file descriptor is available. nl()
    Manpage(ifdstream)

    bf(FBB::IFdStreambuf): Input stream buffer initialized by a file
        descriptor.nl()
    Manpage(ifdstreambuf)

    bf(FBB::IFilterStreambuf): bf(std::streambuf) specialization implementing
    an bf(std::istream) filtering design pattern.nl()
    Manpage(ifilterstreambuf)

    bf(FBB::IOStream): class combining bf(std::istream) and bf(std::ostream)
    features. nl()
    Manpage(iostream)

    bf(FBB::IOStreambuf): bf(std::streambuf) specialization allowing combined 
    input and output operations. nl()
    Manpage(iostreambuf)

    bf(FBB::IRandStream): stream to extract random numbers from. nl()
    (Manpage: bf(man -e bobcat irandstream))

    bf(FBB::lm): Manipulator setting the left margin of bf(FBB::OFoldStream)
    objects.nl() 
    Manpage(lm)

    bf(FBB::Mbuf): bf(std::streambuf) specialization for inserting messages,
    mainly used by bf(FBB::Mstream) objects. nl()
    Manpage(mbuf)

    bf(FBB::mlm): Manipulator modifying the left margin of
    bf(FBB::OFoldStream) objects.nl() 
    Manpage(mlm)

    bf(FBB::Mstream): Inserts messages into streams. nl()
    Manpage(mstream)

    bf(FBB::MultiStreambuf): bf(std::streambuf) specializations performing
    insertions to multiple bf(std::ostream) objects.nl()
    Manpage(multistreambuf)

    bf(FBB::OFdStream): stream inserting information into a device whose
        file descriptor is available. nl()
    Manpage(ofdstream)

    bf(FBB::OFdStreambuf): Output stream buffer initialized by a file
        descriptor.nl()
    Manpage(ofdstreambuf)

    bf(FBB::OFilterStreambuf): bf(std::streambuf) specialization implementing
    an bf(std::ostream) filtering design pattern.nl()
    Manpage(ofilterstreambuf)

    bf(FBB::OFoldStream): bf(std::ostream) using an bf(OFoldStreambuf) as its
    streambuf. nl()
    Manpage(ofoldstream)

    bf(FBB::OFoldStreambuf): bf(OFilterStreambuf) (bf(std::streambuf))
    specialization folding text lines between left and right margins.nl()
    Manpage(ofoldstreambuf)

    bf(FBB::OHexStreambuf): bf(OHexStreambuf) (bf(std::streambuf))
    specialization inserting characters into a stream by their hex values.nl()
    Manpage(ohexstreambuf)

    bf(FBB::Pipe): Defines a system level pipe. nl()
    Manpage(pipe)

    bf(FBB::Randbuffer): implements a bf(streambuf) generating random 
    numbers. nl()
    (Manpage: bf(man -e bobcat randbuffer))

    bf(FBB::ReadLineBuf): implements a bf(streambuf) using the Gnu
    tt(readline) library to allow editing an tt(std::istream)'s contents. nl()
    (Manpage: bf(man -e bobcat readlinebuf))

    bf(FBB::ReadLineHistory): provides access to the history of lines read
    from a tt(ReadLineBuf). nl()
    (Manpage: bf(man -e bobcat readlinehistory))

    bf(FBB::ReadLineStream): tt(std::istream) class using a tt(ReadLineBuf) 
    for its tt(std::streambuf). nl()
    (Manpage: bf(man -e bobcat readlinestream))

    bf(FBB::Redirector): Defines system level file redirection. nl()
    Manpage(redirector)

    bf(FBB::Selector): Offers timed delays and multiple file I/O. nl()
    Manpage(selector)

    bf(FBB::Stat): Determines file characteristics.nl()
    Manpage(stat)

    bf(FBB::TempStream): Temporary fstream. nl()
    Manpage(tempstream)

    it() bf(TABLES)

    bf(FBB::Align): Specifies bf(Table(Buf)) column and element
    alignments.nl()
    Manpage(align)

    bf(FBB::Table): Display tables row- or column-wise.nl()
    Manpage(CHAR(t)able)

    bf(FBB::TableBuf): Display tables row- or column-wise.nl()
    Manpage(CHAR(t)ablebuf)

    bf(FBB::TableLines): Support class for the class bf(Table(Buf)).nl()
    Manpage(tablelines)

    bf(FBB::TableSupport): Support class for the class bf(Table(Buf)).nl()
    Manpage(tablesupport)

    it() bf(VARIOUS OTHER CLASSES)

    bf(FBB::BinOps): A series of function templates implementing binary
    operators for classes that implement the matching binary assignment
    operators themselves. nl()
    Manpage(binops)

    bf(FBB::fswap): templates implementing memory bytes based swap
        functionality nl()
    Manpage(fswap)

    bf(FBB::Indent): Class and manipulators performing text indentation. nl()
    Manpage(indent)

    bf(FBB::Hash...): Various template classes implementing mapping containers
    using hashing.nl()
    Manpage(hash)

    bf(FBB::OneKey): Single keystroke input, not requiring `Return'.nl()
    Manpage(onekey)

    bf(FBB::PrimeFactors): Performs the prime-number factorization of (BigInt)
    values.nl()
    Manpage(primefactors)

    bf(FBB::PtrIter): Input iterator whose dereferenced value returns a
    pointer rather than a reference to an element. Also offers: a tt(ptrIter)
    function template. nl()
    Manpage(ptriter)

    bf(FBB::Ranger): class creating ranges that are accepted by range-based
    for-loops. Also offered: a tt(ranger) function template. nl()
    Manpage(ranger)

    bf(FBB::String): Offers extended bf(std::string) functionality.nl()
    Manpage(string)

    bf(FBB::StringLine): Offers tt(operator>>) extracting lines from
        tt(std::istream) objects.nl()
    Manpage(stringline)

    bf(FBB::TypeTrait): Traits class template to determine various
    characteristics of types.nl()
    Manpage(typetrait)

    bf(FBB::User): Determines the current user's parameters from
    tt(/etc/passwd).nl()
    Manpage(user)

    bf(FBB::Xpointer): sets and retrieves the X-windows pointer.nl()
    Manpage(xpointer)

    it() bf(DEPRECATED CLASSES)
        Deprecated classes should no longer be used. Their functionality is
        better provided by other classes. The deprecated classes are no
        longer maintained.

    bf(FBB::AutoPtr): replacement: bf(C++-11) tt(std::shared_ptr) and
        tt(unique_ptr).nl()

    bf(FBB::Errno): replacement: bf(FBB::Exception).nl()

    bf(FBB::FnWrap): replacement: bf(C++-11) lambda functions.nl()

    bf(FBB::for_each): replacement: bf(C++-11) lambda functions.nl()

    bf(FBB::Msg): replacement: bf(FBB::Mstream).nl()

    bf(FBB::RefCount): replacement: bf(C++-11) tt(std::shared_ptr) and
        tt(unique_ptr).nl()
    )

manpagefiles()
    itemization(
    itb(/usr/include/bobcat/<classname>)
    itb(/usr/lib/libbobcat.*) (shared, static libraries)
    )

manpageseealso()
    The individual bf(bobcat/<class>) header files, with man-pages accessible
    using tt(man -e bobcat class) (all lowercase names)

manpagebugs()
    No Reported Bugs.

includefile(include/trailer)
