#include "diffiehellman"

#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <string>
#include <memory>

#include <arpa/inet.h>

#include <bobcat/exception>
#include <bobcat/mstream>

using namespace std;
using namespace FBB;

#if  OPENSSL_VERSION_NUMBER < 0x10100000L

typedef struct
{
    void (*callback)(int, int, void *);
    void *args;
} BN_GENCB;

inline BN_GENCB *BN_GENCB_new()
{
    return new BN_GENCB;;
}

void BN_GENCB_free(BN_GENCB *cb)
{
    delete cb;
}

inline void BN_GENCB_set_old(BN_GENCB *gencb,
                          int (*callback)(int, int, void *), void *cb_arg)
{
    gencb->callback = callback;
    gencb->args = cb_arg;
}

inline int DH_generate_parameters_ex(DH *dh, int prime_len,int generator, 
                                     BN_GENCB *cb)
{
    dh = DH_generate_parameters(primeLength, generator, 
                                  progress? cb->callback : 0, 0);
    return dh ? 1 : 0;
}

inline int DH_check(DH *dh, int *codes)
{
    return DH_check(dh->get(), codes);
}

inline void DH_set0_key(DH *dh, void *, BIGNUM *privateKey)
{
    BN_free(dh->priv_key);
    dh->priv_key = privateKey;
}

#endif





