#ifndef INCLUDED_BOBCAT_READLINEBUF_
#define INCLUDED_BOBCAT_READLINEBUF_

#include <string>
#include <streambuf>
#include <climits>

namespace FBB
{

struct HistoryExpansion
{
    enum Type
    {
        NO_EXPANSION,
        EXPAND_HISTORY
    };
};
        

class ReadLineBuf: virtual public HistoryExpansion, public std::streambuf
{
    bool d_history;
    std::string d_prompt;
    char *d_buffer;

    public:
        explicit ReadLineBuf(std::string const &prompt = "",
                             Type type = NO_EXPANSION);
        explicit ReadLineBuf(size_t historySize,
                             std::string const &prompt = "");
        virtual ~ReadLineBuf();

        void setPrompt(std::string const &prompt = "");

    private:
        virtual int underflow();
};

inline void ReadLineBuf::setPrompt(std::string const &prompt)
{
    d_prompt = prompt;
}

} // FBB        
#endif
