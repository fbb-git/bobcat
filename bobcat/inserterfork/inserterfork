#ifndef INCLUDED_BOBCAT_INSERTERFORK_
#define INCLUDED_BOBCAT_INSERTERFORK_

#include <ostream>
#include <thread>

#include <bobcat/pipe>
#include <bobcat/ofdstreambuf>
#include <bobcat/execfork>

namespace FBB
{

class InserterFork: private ExecFork,
                    private FBB::OFdStreambuf, public std::ostream

{
    size_t d_bufSize;
    Pipe d_oChildInPipe;           // cin read by the CHILD
    
    public:
        InserterFork(size_t bufSize = 100);

        template <typename Fun>
        bool execute(std::string const &cmd, Fun &&fun);

        bool execute(std::string const &cmd);

        int stop();
        using ExecFork::ret;

    private:
        void childRedirections() override;
        void parentRedirections() override;
};

template <typename Fun>
bool InserterFork::execute(std::string const &cmd, Fun &&fun)
{
    d_oChildInPipe = Pipe{};

    std::thread thr{std::forward<Fun>(fun), std::ref(*this)};

    bool ret = ExecFork::execute(cmd);

    thr.join();
    return ret;
}

} // namespace FBB

#endif







