#ifndef INCLUDED_BOBCAT_OSHAREDSTREAM_
#define INCLUDED_BOBCAT_OSHAREDSTREAM_

#include <ostream>

#include <bobcat/sharedstreambuf>

namespace FBB
{

struct OSharedStream: private SharedStreambuf, public std::ostream, 
                      public virtual SharedEnum__
{
    OSharedStream();

    OSharedStream(
            size_t maxSize, SizeUnit sizeUnit,
            std::ios::openmode openMode = std::ios::out,
            size_t access = 0600);

    OSharedStream(
            size_t id, 
            std::ios::openmode openMode = std::ios::out | std::ios::in);

    void open(
            size_t maxSize, SizeUnit sizeUnit,
            std::ios::openmode openMode = std::ios::out,
            size_t access = 0600);

    void open(
            int id,
            std::ios::openmode openMode = std::ios::in | std::ios::out);

    bool truncate(std::streamsize offset);
    SharedMemory &sharedMemory();

    using std::ostream::clear;

    void memInfo(std::ostream &out, char const *end = "\n") const;

    using SharedStreambuf::id;
    using SharedStreambuf::remove;
    using SharedStreambuf::kill;
    using SharedStreambuf::attachSharedCondition;
    using SharedStreambuf::createSharedCondition;
    using SharedStreambuf::readAttachSharedCondition;
};

#include "truncate.f"

} // FBB        
#endif





