#ifndef INCLUDED_BOBCAT_PIPE_
#define INCLUDED_BOBCAT_PIPE_

#include <bobcat/errno>

namespace FBB
{

class Pipe
{
    protected:
        enum  RW 
        {
            READ, 
            WRITE 
        };
        int d_fd[2];

    public:
        Pipe();
        explicit Pipe(int const *fd);

        ~Pipe();

        void verify() const;        // empty

        int readFd() const;
        int writeFd() const;

        void readFrom(int filedescriptor);   

        // experimental:
        void readFrom(int const *filedescriptor, size_t n);

        int readOnly();
        void writtenBy(int filedescriptor);
        void writtenBy(int const *filedescriptor, size_t n = 2);
        int writeOnly();
};

inline Pipe::~Pipe()
{
    verify();
}

inline int Pipe::readFd() const
{
    return d_fd[READ];
}

inline int Pipe::writeFd() const
{
    return d_fd[WRITE];
}

inline void Pipe::verify() const
{}

} // FBB

#endif

