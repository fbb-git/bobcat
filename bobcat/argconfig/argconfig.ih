#include "argconfig"

#include <iostream>
#include <functional>
#include <algorithm>

#include <bobcat/string>
#include <bobcat/errno>

namespace FBB
{
    class OptStructArray
    {
        typedef struct option  OptStruct;

        size_t    d_n;
        OptStruct *d_opt;
        
        public:
            OptStructArray(size_t n)
            :
                d_n(n),
                d_opt(new OptStruct[n])
            {}

            ~OptStructArray()
            {
                delete [] d_opt;
            }

            OptStruct *get()
            {
                return d_opt;
            }
    };

class ArgConfig__
{
                                            // find long options given short
                                            // option char
    std::unordered_map<int, std::string> d_longOption; 
        
    public:
        ArgConfig__(LongOption__ const *begin, LongOption__ const *const end);
        std::unordered_map<int, std::string>::const_iterator 
                                                    find(int optChar) const;
        
};

} // FBB

using namespace FBB;
using namespace std;
