#ifndef INCLUDED_BOBCAT_EXTRACTORFORK_
#define INCLUDED_BOBCAT_EXTRACTORFORK_

#include <iosfwd>
#include <istream>

#include <bobcat/pipe>
#include <bobcat/ifdstreambuf>
#include <bobcat/execfork>

namespace FBB
{

class ExtractorFork: public ExecFork
{
    Pipe d_iChildOutPipe;           // cout written by the CHILD
    IFdStreambuf d_iChildOutbuf;    // Child inserts,
    std::istream d_iChildOut;       // Parent extracts child's cout

    public:
        ExtractorFork();
        ~ExtractorFork() override;
        using ExecFork::waitForChild;
        explicit operator bool() const;

    private:
        void childRedirections() override;
        void parentRedirections() override;
        void parentProcess() override;

    template <typename Param>
    friend ExtractorFork &operator>>(ExtractorFork &extractor, Param &&param);
};

inline ExtractorFork::ExtractorFork()
:
    d_iChildOut(0)
{}

inline ExtractorFork::operator bool() const
{
    return d_iChildOut.good();
}

template <typename Param>
inline ExtractorFork &operator>>(ExtractorFork &extractor, Param &&param)
{
    extractor.d_iChildOut >> std::forward<Param>(param);
    return extractor;
}        

} // namespace FBB
        
#endif
