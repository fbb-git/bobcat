includefile(include/header)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::SyslogStream)(3bobcat)(_CurYrs_)(libbobcat-dev__CurVers_-x.tar.gz)
                    (Output Stream for Syslog)

manpagename(FBB::SyslogStream)(An output stream inserting syslog messages)

manpagesynopsis()
    bf(#include <bobcat/syslogstream>)nl()
    Linking option: tt(-lbobcat) 

manpagedescription()
    bf(FBB::SyslogStream) objects may be used as a bf(std::ostream) to write
syslog messages using stream facilities. 

Multiple separate insertions can be used to create a single syslog message:
the message is only sent to the syslog daemon after receiving a tt(flush)
command (e.g., after inserting tt(std::flush) or tt(std::endl)). Non-printable
characters (like tt('\n')) show up in the syslog message as octal values,
preceded by tt(#) (e.g., tt(#012) for tt('\n')). The newline normally inserted
by tt(std::endl) is ignored: bf(SyslogStream) objects interpret tt(std::endl)
like tt(std::flush).

includefile(include/namespace)

manpagesection(INHERITS FROM)
    bf(std::ostream)

manpagesection(ENUMERATIONS)

    The following enumerations are defined in the namespace bf(FBB):

    bf(Priority):

        The values of this enumeration match the corresponding priority
bf(LOG_xxx) values used with bf(syslog)(3):
    itemization(
    itb(EMERG)
        system is unusable;
    itb(ALERT)
        action must be taken immediately;
    itb(CRIT)
        critical conditions;
    itb(ERR)
        error conditions;
    itb(WARNING)
        warning conditions;
    itb(NOTICE)
        normal, but significant, condition;
    itb(INFO)
        informational message;
    itb(DEBUG)
        debug-level message;
    )
    tt(Priority) values can be combined using the tt(bitor) operator. This is
mainly used with the tt(setMask) static member function.
    

    bf(Facility):

        The values of this enumeration match the corresponding facility
bf(LOG_xxx) values used with bf(syslog)(3):
    itemization(
    itb(AUTHPRIV)
        security/authorization messages (private)
    itb(CRON)
        clock daemon (tt(cron) and tt(at))
    itb(DAEMON)
        other system daemons
    itb(KERN)
        kernel messages
    itb(LOCAL0) 
        reserved for local use. bf(LOCAL1) through bf(LOCAL7) are
        available as well.
    itb(LPR)
        line printer subsystem
    itb(MAIL)
        mail subsystem
    itb(NEWS)
        tt(USENET) news subsystem
    itb(SYSLOGBUF)
        messages generated internally by tt(syslogbufd)
    itb(USER)
        generic user-level messages
    itb(UUCP)
        UUCP subsystem
    )

manpagesection(CONSTRUCTORS)
    itemization(
    itb(SyslogStream(string const &ident = "",
                FBB::Priority priority = FBB::NOTICE, 
                FBB::Facility facility = FBB::USER,
                int option = 0))
        This constructor initializes a bf(Syslogstream) object.  The
tt(ident) parameter is usually the name of the program. Its contents are
prepended to syslog messages. 

The bf(priority) parameter determines the default importance of the
message sent to the syslog daemon. By default bf(FBB::NOTICE) is used. Syslog
messages may be given different priority by inserting a
bf(SyslogStream)(3bobcat) manipulator, and the priority set at construction
time may be modified using the tt(setPriority) member.

Which messages actually appear in log facilities is not determined by
the messages' priorities, but by the em(log mask). The log mask can be set by
the static member tt(setMask) (see below).

The bf(facility) parameter determines the type of program doing the
logging. By default bf(FBB::USER) is used.


    The bf(option) parameter may be used to specify various options (use the
binary `tt(bitor)' (`tt(|)') operator to combine options):

       bf(LOG_CONS):
              write directly to system console  if  there  is  an
              error while sending to system logger nl()
       bf(LOG_NDELAY):
              open the connection immediately (normally, the con-
              nection is opened when the first message is logged) nl()
       bf(LOG_PERROR):
              print to stderr as well nl()
       bf(LOG__PID):
              include PID with each message nl()

    By default no options are used.

    itb(SyslogStream(char const *ident,
                FBB::Priority priority = FBB::NOTICE, 
                FBB::Facility facility = FBB::USER,
                int option = 0))
        This constructor is kept for backward compatibility. Its parameters
have the same meanings as those of the abovementioned constructor. A
tt(nullptr) can be specified to indicate that no text needs to be
prepended to syslog messages.

    )

    Copy and move constructors are not available.

manpagesection(MEMBER FUNCTIONS)
     All members of bf(std::streamstream) are available, as
bf(FBB::SyslogStream) inherits from this class.
    itemization(
    itb(Priority defaultPriority() const)
        Returns the default priority. I.e., the priority that will be used for
the messages after inserting bf(endl), unless altered by
bf(setDefaultPriority()).
    itb(Priority priority() const)
        Returns the next priority. I.e., the priority that will be used for
the next message, unless altered by bf(setPriority()).
    itb(Priority setDefaultPriority(Priority priority))
        Changes the default priority of the next syslog-message after
inserting bf(std::eoln). Initially, the priority is determined as the value
passed to the constructor. The previously active default priority is returned.
    itb(Priority setPriority(Priority priority))
        Changes the priority for the next syslog message (after bf(std::eoln)
has been inserted). Subsequent messages will use the default priority
again. The previously active priority setting is returned.
    )

manpagesection(STATIC MEMBER FUNCTION)

    itemization(
    itb(Priority setMask(Priority accept, bool upTo = false))
        Syslog messages

manpagesection(MANIPULATORS)

    The following set of manipulators are all defined as (static) members of
the class bf(FBB::SyslogStream). They may be inserted into an
bf(FBB::SyslogStream). Except for the last manipulator
(bf(strerrno)), they have the following characteristics in common:
    itemization(
    it() They will change the priority of the messages that are subsequently
inserted by the bf(FBB::SyslogStream) object.
    it() When inserting multiple manipulators before the inserted message is
flushed (e.g., using the bf(ios::flush) or the bf(ios::endl) manipulators) the
last inserted bf(FBB::SyslogStream) manipulator will be used.
    it() Nothing happens if the manipulators are not inserted into an
bf(FBB::SyslogStream) object.
    )
    Here are the available manipulators:
    itemization(
    itb(SyslogStream::alert) 
        Messages are inserted with priority bf(LOG_ALERT).
    itb(SyslogStream::crit) 
        Message are inserted with priority bf(LOG_CRIT).
    itb(SyslogStream::debug) 
        Messages are inserted with priority bf(LOG_DEBUG).
    itb(SyslogStream::emerg)
        Messages are inserted with priority bf(LOG_EMERG).
    itb(SyslogStream::err)
        Messages are inserted with priority bf(LOG_ERR).
    itb(SyslogStream::info) 
        Messages are inserted with priority bf(LOG_INFO).
    itb(SyslogStream::notice) 
        Messages are inserted with priority bf(LOG_NOTICE).
    itb(SyslogStream::strerrno)
        This manipulator inserts the textual interpretation of
tt(std::errno)'s current value into a bf(std::ostream). Note that the object
into which the manipulator is inserted does not have to be a
bf(FBB::SyslogStream) object.
    itb(SyslogStream::warning)
        Messages are inserted with priority bf(LOG_WARNING).
    )

manpagesection(EXAMPLE)
    verb(
#include <bobcat/syslogstream>

using namespace std;
using namespace FBB;

int main(int argc, char **argv)
{
    SyslogStream sls(argv[0]);

    sls << SyslogStream::debug << "Hello world" << endl;
    sls << SyslogStream::strerrno << endl;
}
    )

manpagefiles()
    em(bobcat/syslogstream) - defines the class interface

manpageseealso()
    bf(bobcat)(7), bf(openlog)(3), bf(syslog)(3), bf(syslogbuf)(3bobcat)

manpagebugs()
    The constructor's tt(option) parameter is an bf(int). Because of this,
bf(int) values rather than enumeration values are passed to the
constructor. It is the responsibility of the programmer to pass defined option
values only.

includefile(include/trailer)
