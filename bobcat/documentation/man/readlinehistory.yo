includefile(header.inc)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::ReadLineHistory)(3bobcat)(_CurYrs_)
            (libbobcat1-dev__CurVers_-x.tar.gz)
                    (Editing input lines)

manpagename(FBB::ReadLineHistory)
            (std::streambuf offering line-editing and history)

manpagesynopsis()
    bf(#include <bobcat/readlinebuf>)nl()
    Linking option: -lreadline -lbobcat

manpagedescription()
    bf(FBB::ReadLineHistory) objects offer access to the history maintained by
bf(FBB::ReadLineBuf) and bf(ReadLineStream) objects.

The latter two classes use Gnu's readline library to allow editing of
input lines. The accumulated history of these objects can be accessed 
from the bf(ReadLineHistory) object.

Since Gnu's readline library maintains global data there can only be one
history. The bf(ReadLineHistory) class is therefore, like bf(ReadLineBuf) a
singleton.  (Gnu's readline library does, however, offer functions allowing
programs to use multiple histories. So it would in principle be possible to
design a non-singleton tt(ReadLineHistory) class. Since programs normally only
interact with a single terminal, there is probably little use for
non-singleton bf(ReadLineHistory) class).

The bf(ReadLineHistory) class encapsulates history access. It offers limited
facilities: either forward or backward iterations over the history are
offered. The contents of the history lines and --if defined-- the timestamps
of the lines in the history can be obtained from the iterators.

includefile(namespace.inc)

manpagesection(INHERITS FROM)
    -

manpagesection(NESTED TYPES)

    The class bf(ReadLineHistory) defines the following nested types:

bf(HistoryElement)

The iterators made available by the bf(ReadLineHistory) object provide access
to a bf(HistoryElement) object. These objects can be copied and assigned to
each other, but user programs cannot otherwise construct bf(HistoryElement)
objects.

The class bf(HistoryElement) has but two members:
    itemization(
    itt(char const *line() const) returns the contents of the 
history line to which a bf(ReadLineHistory) iterator refers;
    itt(char const *timestamp() const) returns the timestamp (if defined) of
the history line to which a bf(ReadLineHistory) iterator refers;
    )

bf(const_iterator) and bf(const_reverse_iterator)

The iterators returned by members of the class bf(ReadLineHistory) are input
iterators, pointing to bf(HistoryElement) objectss. As they are input
iterators modification of the history elements to which they refer is not
allowed. 

The class bf(const_iterator) allows iterations from the first to the last
history element, the class bf(const_reverse_iterator) allows iterations from
the last back to the first history element.

The iterators can be incremented, compared for (in)equality and offer
tt(operator*) and tt(operator->) members, offering access to, respectively,
bf(HistoryElement) objects and their addresses.

manpagesection(CONSTRUCTORS)

    The default and copy constructors are available

manpagesection(MEMBER FUNCTIONS)
    itemization(
    itb(ReadLineHistory::Expansion expansion() const)
    )

manpagesection(EXAMPLE)
    verbinclude(../../readlinehistory/driver/driver.cc)

manpagefiles()
    em(bobcat/readlinehistory) - defines the class interface

manpageseealso()
    bf(bobcat)(7), bf(readline)(3), bf(readlinehistory)(3), 
    bf(readlinestream)(3)

manpagebugs()
    None Reported.

includefile(trailer.inc)
