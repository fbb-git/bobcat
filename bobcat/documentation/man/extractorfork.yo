includefile(include/header)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::ExtractorFork)(3bobcat)(_CurYrs_)(libbobcat-dev__CurVers_-x.tar.gz)
                    (Executing Child Processes)

manpagename(FBB::ExtractorFork)(Runs external programs writing standard output)

manpagesynopsis()
    bf(#include <bobcat/extractorfork>)nl()
    Linking option: tt(-lbobcat) 

manpagedescription()
    The bf(FBB::ExtractorFork) class offers a basic interface for calling
external programs (so-called em(child processes)) writing their standard
output streams from a bf(C++) program. The standard input and standard error
streams of the child processes are not handled by ttExtractorFork)
objects. The child's standard output is read through the tt(ExtractorFork)
object: information written by the child process to its standard output stream
is extracted or read from tt(ExtractorFork) object. The tt(PATH) environment
variable is not used when calling child processes: child process programs must
be specified using paths.

tt(ExtractorFork) objects may repeatedly be used to execute the same or
different child processes. 

Arguments passed to child processes may be surrounded by double or single
quotes. Arguments surrounded by double quotes have their double quotes
removed, while interpreting any escape-sequences that may have been used
within. Arguments surrounded by single quotes have their single quotes
removed, while accepting their contents as-is. In addition unquoted
escape-sequences may be specified: those escape sequences are evaluated and
replaced by their intended characters (e.g., tt(\100) is converted to tt(@)).

includefile(include/namespace)

manpagesection(INHERITS FROM)
    bf(FBB::ExecFork) (private),
    bf(FBB::IFdStreambuf) (private),
    bf(std::istream)

manpagesection(CONSTRUCTOR)

    itemization(
    itb(ExtractorFork(size_t bufSize = 100))
        A tt(bufSize) argument may be specified: it defines the internal
buffer size used by the tt(ExtractorFork's) streambuf.
    )

manpagesection(MEMBERS)

    itemization(
    itb(bool execute(std::string const &cmd))
        The argument specifies the command to execute: the command itself must
be specified as a path (the tt(PATH) environment variable isn't used). The
member returns tt(true) if the child process's exit value equals 0. Otherwise
tt(false) is returned. Once tt(execute) has returned it can be called again,
either using the same or another command. The class tt(ExecFork) does not
offer facilities to forcefully terminate the child process: the parent process
is suspended until the child process has completed. Arguments passed to the
program to be executed as child process may be specified using single or
double quotes, as described in this man-page's DESCRIPTION section.

    itb(int ret() const)
        Once tt(execute) has returned this member provides the actual exit
code of the child process. Its value equals -1 before the first tt(exectue)
call.
    )

manpagesection(EXAMPLE)

    verbinclude(../../extractorfork/driver/driver.cc)

manpagefiles()
    em(bobcat/extractorfork) - provides the class interface

manpageseealso()
    bf(bobcat)(7), bf(execl)(3), bf(execfork)(3bobcat), 
    bf(extractorfork)(3bobcat), bf(fork)(3bobcat), bf(process)(3bobcat)

manpagebugs()
    None reported.

includefile(include/trailer)




