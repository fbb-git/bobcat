includefile(header.inc)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::TableSupport)(3bobcat)(_CurYrs_)
    (libbobcat1-dev__CurVers_-x.tar.gz)(Table Support Base class)

manpagename(FBB::TableSupport)(Defines protocol for Table-support classes)

manpagesynopsis()
    bf(#include <bobcat/tableSupport>)nl()
    Linking option: tt(-lbobcat) 

manpagedescription()
    This class is designed as a (non-pure) base class for objects handling
some of the functionality of bf(FBB::Table) objects. By overriding its virtual
functions users have control over the way the actual layout of tables is
defined. By default the virtual members of this class implement plain,
blank-space delimited table elements.

    When this is not appropriate, a class should be derived from
bf(FBB::TableSupport) overriding those members that violate the programmer's
current intentions. Then, an object of this derived class may be presented 
to one of the bf(FBB::Table) constructors, resulting in modifications of the
default procedures used to disaplay separators between table elements.

includefile(namespace.inc)

manpagesection(INHERITS FROM)
    -

manpagesection(PUBLIC TYPE)

    The type bf(HLine) is a bf(struct) having the following fields:
        verb(
    size_t d_row;
    size_t d_begin;
    size_t d_end;
        )
    Furthermore, it has a constructor that is defined as follows:
        itemization(
        itb(HLine(size_t row, size_t begin, size_t end))
            This constructor may be used to initialize the struct's values.
        )
    Objects of type bf(TableSupport::HLine) may be inserted into a
bf(TableSupport) object to indicate what section(s) of a horizontal separator
of a table-row should be displayed or skipped (see below at the tt(Type)-type
description). 
    
manpagesection(PROTECTED TYPES)

    The following types may be used by classes derived from bf(TableSupport):
    itemization(
    itb(BeginEnd)
        This type represents a bf(std::pair<size_t, size_t>), representing the
first column offset for which a horizontal separator should be shown
(tt(first)) and the first column offset beyond the last column offset to show
a separator for. E.g, tt(BeginEnd(2, 5)) indicates that a separator should be
shown from column 2 until column 4.
    itb(const_iterator)
        The bf(TableSupport::const_iterator) is an input-iterator returning
pointers to bf(Element struct)s for all column separators and elements in a
table. The first element represents the separator immediately preceding the
elements in the table's leftmost column, the last element represents the
separator immediately succeeding the elements in the table's rightmost
column. 
    itb(Element)
        An bf(Element) is a bf(struct) having two fields: a tt(Type type) and
a tt(size_t width). The tt(width) field defines the size of a
column(-separator), tt(type) defines its type.
    itb(Type) 
        This type has two values: bf(SKIP) and bf(USE). The values indicate
that a certain part of a row may be left blank or should be using a
separator when a horizontal line (bf(hline())) is written.
    itb(SizeBeginEndMap)
        This type represents a bf(std::map<size_t, std::vector<BeginEnd> >).
    Its key represents a row-separator (0 being the separator above row 0,
tt(nRows) being the separator beyond the last row). Subsequent 
bf(BeginEnd) elements in its bf(vector) values should represent increasing and
non overlapping sections of a table .
    )

manpagesection(CONSTRUCTORS)

    The default constructor and standard copy constructor are available.

manpagesection(OVERLOADED OPERATORS)

    itemization(
    itb(TableSupport &operator<<(TableSupport &support, size_t width))
        This operator defines a blank column-separator of tt(width)
characters. The argument tt(width) may be zero, in which case no visible
separator is inserted into the table (thus, it can be used to reach the next
separator position). The first separator inserted refers to the separator to
the left of the table's leftmost column. Subsequent separators separate
subsequent columns. At most tt(nColumns + 1) separators can be inserted. Any
additional separator that is inserted is ignored.
    itb(TableSupport &operator<<(TableSupport &support, 
                                                std::string const &sep))
        This operator defines a textual separator. The string may be empty, in
which case no visible separator is inserted into the table (thus, it can be
used to reach the next separator position). The first separator inserted
refers to the separator to the left of the table's leftmost column. Subsequent
separators separate subsequent columns. At most tt(nColumns + 1) separators
can be inserted. Any additional separator that is inserted is ignored.
    itb(TableSupport &operator<<(TableSupport &support, HLine const &hsep))
        This operator defines a section of a horizontal separator of a
specified row which should be displayed. Subsequent insertions of bf(HLine)
elements referring to the same row should refer to increasing and
non overlapping sections of a table. E.g., if tt(support) is a
bf(TableSupport) object, the following insertions indicate that columns 2
until 3 and 5 until 6 of row 7 should have a visible horizontal separator:
        verb(
    support << HLine(7, 2, 4) << HLine(7, 5, 7);
        )
    )
    The overloaded assignment operator is available.

manpagesection(NON_VIRTUAL MEMBER FUNCTIONS)
    itemization(
    itb(void setParam(std::ostream &ostr, size_t nRows, size_t nColumns,
                        std::vector<Align> const &align))
        This member function defines the bf(TableSupport) object's essential
parameters: nl()
        bf(ostr) is a reference to the bf(std::ostream) into which the table
will be inserted; nl()
        bf(nRows) specifies  the number of rows used by the table;nl()
        bf(nColumns) specifies  the number of columns if the table;nl()
        bf(align) is a reference to a constant vector of (column) alignment
specifications. This member should normally not be used by the programmer. It
is called with appropriate values by bf(FBB::Table) objects.
    itb(size_t width() const)
        Returns the width of the table.
    )

manpagesection(VIRTUAL MEMBER FUNCTIONS)

    The following member functions may be overridden in derived classes. There
default implementations are given together with their prototypes, below:

    itemization(
    
    itb(virtual void hline(size_t row) const)
        This member is called just before the indicated row (offset, not
number) is inserted into the bf(std::ostream).  Its intended task is to write
a (partial) horizontal line either before the first row (row == 0) or between
two rows of the table. By default it performs no actions.
    itb(virtual void hline() const)
        This member is called when the table's last line has been inserted 
into the bf(std::ostream). Its intended task is to write a (partial) horizontal
line at the end of the table. By default it calls tt(hline(nRows)).
    itb(virtual void vline(size_t col) const)
        This member is called just before the indicated column element
(offset, not number) is inserted into the bf(std::ostream). Its intended task
is to write a separator either before the first element of a row (col == 0) or
between two subsequent elements in the table's rows. By default it performs no
actions.
    itb(virtual void vline() const)
        This member is called when the last element of a row has been inserted
into the tt(ostr) stream.  Its intended task is to write a line separator,
terminating a line of the table. By default it inserts a new-line (tt(\n))
character. 
    )

manpagesection(PROTECTED MEMBER FUNCTIONS)
    
    The following members are available to classes derived from
bf(TableSupport) objects, e.g, to be used in overridden bf(hline()) or
bf(vline()) members. 
    itemization(
    itb(std::vector<Align> const &align() const)
        This member returns a reference to a vector of tt(Align) objects,
defining the alignments and widths of the table's columns.
    itb(const_iterator begin(size_t row) const) 
        This member returns an iterator returning information about fields to
display or ignore in the horizontal separator preceding line tt(row). To
obtain the information beyond the last row specify tt(nRows) as its argument.
    itb(size_t colWidth(size_t col) const)
        This member returns the width of the indicated column;
    itb(const_iterator end(size_t row) const) 
        This member returns an iterator which refers to the location beyond
the table's rightmost separator.
    itb(SizeBeginEndMap const &hlineMap() const)
        This member returns a reference to the information defining the 
visible separatorsections of the table.
    itb(size_t nColumns() const)
        This member returns the number of columns of the table.
    itb(size_t nRows() const)
        This member returns the number of rows of the table.
    itb(std::ostream &out() const)
        This member returns a reference to the stream into which the table
is inserted.
    itb(std::vector<std::string> const &sep())
        This member returns a reference to the separators that are defined for
the table's columns. Element 0 refers to the separator to the left of the
leftmost table column, element tt(nColumns) refers to the separator to the
right of the rightmost table column.
    itb(size_t sepWidth(size_t col) const)
        This member returns the width of the indicated separator. Index value
0 refers to the separator before the table's leftmost column, index value
tt(nColumns()) refers to the separator to the right of the table's rightmost
column. 
    )    

manpagesection(EXAMPLE)
    See the example in the bf(table)(3bobcat) man-page.

manpagefiles()
    em(bobcat/tableSupport) - defines the class interface

manpageseealso()
    bf(bobcat)(7), bf(align)(3bobcat), bf(table)(3bobcat)

manpagebugs()
    None Reported.

includefile(trailer.inc)

