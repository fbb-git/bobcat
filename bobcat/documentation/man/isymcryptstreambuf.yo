includefile(include/header)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::ISymCryptStreambuf)(3bobcat)(_CurYrs_)
        (libbobcat-dev__CurVers_-x.tar.gz)(Filtering Input Stream Buffer)

manpagename(FBB::ISymCryptStreambuf)
            (Filtering stream buffer for symmetric encryption)

manpagesynopsis()
    bf(#include <bobcat/isymcryptstreambuf>)nl()
    Linking option: tt(-lbobcat) 

manpagedescription()
    The information made available by bf(ISymCryptStreambuf) objects has
been subject to symmetric encryption or decryption. The information to be
encrypted or decrypted is made available to bf(ISymCryptStreambuf) object
via tt(std::istream) objects.


includefile(include/namespace)

manpagesection(INHERITS FROM)
    bf(FBB::IFilterStreambuf)

manpagesection(MEMBER FUNCTIONS)
     All members of bf(FBB::IFilterStreambuf) are available, as bf(ISymCryptStreambuf).

    Overloaded move and/or copy assignment operators are not available.

manpagesection(PROTECTED CONSTRUCTOR)
    itemization(
    itb(ISymCryptStreambuf(size_t bufSize = 1000))
        This constructor initializes the streambuf, using a buffer of the
indicated size. While the streambuf is being used, its buffer is gradually
filled. Eventually, when it is full the oldest characters are removed from the
buffer, making room for more recent characters. At most half the tt(bufSize)
number of characters will be removed during a single refill. The constructor
ensures that the size of the buffer will always be at least 100.
    )
    Copy- and move constructors are not available.

manpagesection(PROTECTED MEMBER FUNCTION)

    itemization(
    itb(void setBuffer())
        This member initializes the base class's buffer pointers (i.e.,
tt(eback, gptr,) and tt(egptr)) with the initial range of characters retrieved
by tt(filter) (see below). 

    The member tt(setBuffer) should only once be called from the derived
class's constructor. Once it has been called, the tt(peek) member of the
tt(std::istream) that is initialized with the bf(ISymCryptStreambuf) will return
the next available character, even if no other stream operation has as yet
been performed. If it is not called by the derived class's constructor, then
tt(peek) returns 0 until at least one character has been retrieved from the
tt(istream) object.
    )

manpagesection(PRIVATE VIRTUAL MEMBER FUNCTIONS)

    itemization(
    itb(virtual bool filter(char const **srcBegin, char const **srcEnd) = 0)
        The tt(filter) member is declared as a pure virtual member: derived
classes em(must) override tt(filter) with their own implementation. 

    Derived class objects are responsible for obtaining information (in any
amount) from the device with which they interact. This information is then
passed on to the tt(ISymCryptStreambuf) via two pointers, pointing,
respectively, to the first available character and beyond the last available
character. The characters indicated by this range are subsequently transferred
by the bf(ISymCryptStreambuf) object to its own buffer, from where they are then
retrieved (or to where they can be pushed back) by the application. 

    The tt(filter) member allows implementations to filter and/or modify the
information that is obtained by this member. The bf(EXAMPLE) section below
provides an example filtering out a configurable set of characters from a
provided tt(std::istream). Bobcat's classes bf(ISymCryptStreambuf)(3bobcat)
and bf(IBase64Streambuf)(3bobcat) provide additional examples of classes
derived from  bf(ISymCryptStreambuf).

    The tt(filter) member should return tt(false) if no (more) information is
available. It should return tt(true) if information is available, in which
case tt(*srcBegin) and tt(*srcEnd) should be pointing to, respectively, the
first character and beyond the last character made available by tt(filter);
    itb(int pbackfail() final override)
        The tt(pbackfail) member is final; derived classes cannot override
it. Currently it merely returns tt(EOF). This may change in future
implementations. 
    itb(std::streamsize showmanyc() final override)
        The tt(showmanyc) member is final; derived classes cannot override
it. It returns the current number of characters that are (still) waiting to
be processed in the range of characters returned by the latest tt(filter)
call. 
    itb(int underflow() final override)
        The tt(underflow) member is final; derived classes cannot override
it. It calls tt(filter), and refreshes at most
half the size of its internal buffer with characters from the range of
characters that was returned by the most recent call of tt(filter).
    )
    The tt(final) attribute was added to the above three members to give
tt(ISymCryptStreambuf) objects full control over their own buffers. 


manpagesection(EXAMPLE)

    Here is a class, derived from tt(ISymCryptStreambuf), filtering out a
predefined set of characters. It is used twice to filter digits and
vowels, to illustrate chaining of bf(ISymCryptStreambuf) objects.

    verbinclude(../../ifilterstreambuf/driver/driver.cc)

manpagefiles()
    em(bobcat/ifdstreambuf) - defines the class interface

manpageseealso()
    bf(bobcat)(7), bf(isymcryptstreambuf)(3bobcat),
bf(ibase64streambuf)(3bobcat),
bf(ofilterstreambuf)(3bobcat). bf(std::streambuf)

manpagebugs()
    None reported.

includefile(include/trailer)


