#ifndef INCLUDED_PROCESSDATA_DECL_
#define INCLUDED_PROCESSDATA_DECL_

//#include <istream>
//#include <ostream>

#include <mutex>
#include <condition_variable>

#include "../signal/signal"

#include "../processenums/processenums"

namespace FBB
{

class ProcessData: public ProcessEnums, public SignalHandler
{
    enum ChildAction
    {
        PASSIVE,
        MONITORING,
        CHILD_ENDED
    };
        
    volatile ChildAction d_action = PASSIVE;
    std::mutex d_mutex;
    std::condition_variable d_condition;

    public:
//        static std::istream s_in;
//        static std::ostream s_out;

        size_t d_bufSize;
    

        ProcessData(size_t bufSize);
        ~ProcessData() override;

        bool parentProcess(size_t timeLimit);

    private:
        void signalHandler(size_t signum) override;

};

}   // FBB







#endif
