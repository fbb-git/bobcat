.TH "FBB::Errno" "3bobcat" "2005-2006" "libbobcat1-dev_1\&.10\&.0-x\&.tar\&.gz" "Error handler"

.PP 
.SH "NAME"
FBB::Errno \- Throwable objects handling error conditions
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/errno>\fP
.br 
Linking option: \fI-lbobcat\fP 
.PP 
.SH "DESCRIPTION"
\fBFBB::Errno\fP objects may be thrown in exceptions\&.  As they are also
\fBstd::ostringstream\fP objects, information may be inserted into them\&.
Facilitities are offered to insert information into, and to throw anonymous
\fBFBB::Errno\fP objects\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
\fBstd::ostringstream, std::exception\fP
.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBErrno()\fP:
.br 
This constructor stores the current system \fIerrno\fP value and its textual
interpretation\&. No textual \fIerrno\fP conversion is stored if \fIerrno\fP equals
0\&.
.IP o 
\fBErrno(char const *prefix)\fP:
.br 
This constructor stores the current system \fIerrno\fP value\&. To this, the
textual interpretation of \fBerrno\fP is added unless \fBerrno\fP equals 0\&. If, in
this situation, \fBprefix\fP is a non-empty string, the text \fI: \fP is first
appended to the prefix\&.
.IP o 
\fBErrno(int errnr, char const *text = 0)\fP:
.br 
This constructor stores the provided \fIerrnr\fP value, and the \fItext\fP
text\&. The \fItext\fP argument may be omitted or empty, in which case no text
will be prefixed to any additionally inserted information\&. With this version
of \fBFBB::Errno\fP, no \fI: \fP is added to a non-empty \fItext\fP argument\&.  
.IP o 
\fBErrno(FBB::Errno const &other) throw()\fP:
.br 
The standard copy constructor is available\&.

.PP 
.SH "MEMBER FUNCTIONS"
All members of \fBstd::ostringstream\fP and \fB  std::exception\fP are
available, as \fBFBB::Errno\fP inherits from these classes\&.
.IP o 
\fBvirtual char const *what() const throw()\fP:
.br 
Returns the initialized and inserted text\&. \fINo\fP separators are inserted
by the \fBFBB::Errno\fP object between the initializatin text and any text
inserted later\&. If separators are required, the user of the \fBFBB::Errno\fP
object must insert these explicitly\&.
.IP o 
\fBint which() const throw()\fP:
.br 
Returns the internally stored \fBerrno\fP value: either the system-\fBerrno\fP
value, or the value provided by the third constructor\&.

.PP 
.SH "MANIPULATORS"
The following manipulators (which are \fInot\fP part of the \fBFBB::Errno\fP,
class, but \fIare\fP defined in the \fBFBB\fP namespace) can be inserted into the
\fBFBB::Errno\fP object:
.IP o 
\fBinsertable\fP:
.br 
If inserted immediately after the construction of an anonymous
\fBFBB::Errno\fP object, information may be inserted into the anonymous object
immediately thereafter\&. The manipulator is not required for named \fIErrno\fP
objects into which information is inserted after their construction\&.
.IP o 
\fBthrowable\fP:
.br 
If placed at the end of a series of insertions into the \fBFBB::Errno\fP
object, it allows the object to be thrown as an exception in one expression\&.

.PP 
.SH "EXAMPLE"
The following example shows the normal use of the manipulators:
.nf 

    if (exceptionalCondition)
        throw FBB::Errno(1, "Failure") << FBB::insertable << 
                ": Exceptional condition occurred" << FBB::throwable;
        
.fi 

.PP 
.SH "FILES"
\fIbobcat/errno\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7)
.PP 
.SH "BUGS"
None Reported\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.10\&.0-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.10\&.0-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.10\&.0-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
Academic Free Licence\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
