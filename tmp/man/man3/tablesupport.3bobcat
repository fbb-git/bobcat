.TH "FBB::TableSupport" "3bobcat" "2005-2006" "libbobcat1-dev_1\&.10\&.0-x\&.tar\&.gz" "Protocol defining Base class"

.PP 
.SH "NAME"
FBB::TableSupport \- Defines protocol for Table-support classes
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/tableSupport>\fP
.br 
Linking option: \fI-lbobcat\fP 
.PP 
.SH "DESCRIPTION"
This class is designed as a (non-pure) base class for support-objects for
\fBFBB::Table\fP objects\&. By overriding its virtual functions users have control
over the way the actual layout of tables is defined\&. By default the virtual
members of this class implement plain, blank-space delimited table elements\&.
.PP 
When this is not appropriate, a class should be derived from
\fBFBB::TableSupport\fP overriding those members that violate the programmer\&'s
current intentions\&. Then, an object of this derived class may be presented 
to one of the \fBFBB::Table\fP constructors, resulting in modifications of the
default procedures used to disaplay separators between table elements\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
-
.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBTableSupport()\fP:
.br 
The default constructor
.IP o 
\fBTableSupport(TableSupport const &other) throw()\fP:
.br 
The standard copy constructor is available\&.

.PP 
.SH "NON_VIRTUAL MEMBER FUNCTIONS"
.IP o 
\fBvoid setParam(std::ostream &ostr, unsigned rows, 
std::vector<unsigned> const &colWidth,
unsigned maxWidth)\fP:
.br 
This member function defines the \fBFBB::TableSupport\fP\&'s essential
parameters: 
.br 
\fBostr\fP is a reference to the \fBstd::ostream\fP into which the table
will be inserted; 
.br 
\fBrows\fP defines the number of rows used by the table;
.br 
\fBcolWidth\fP is a vector defining the widths of the individual columns
of the table\&. Its values are ignored when the next parameter is unequal to 0,
but in that case its \fIsize\fP (its number of elements) \fIare\fP used;
.br 
\fBmaxWidth\fP is the width of each column\&. If set to 0 \fBcolWidth\fP\&'s
elements are used to determine the width of the individual columns\&.
.IP 
Note that this member is normally not used by the programmer, but it is
called with appropriate values by \fBFBB::Table\fP\&.
.IP o 
\fBvoid setParam(unsigned maxWidth)\fP:
.br 
This member function defines the \fBFBB::TableSupport\fP\&'s \fBmaxWidth\fP
parameter, holding the width of each column\&.
.IP 
Note that this member is normally not used by the programmer, but it is
called with appropriate values by \fBFBB::Table\fP\&.

.PP 
.SH "ACCESSORS"

.PP 
.IP o 
\fBunsigned tableWidth() const\fP:
.br 
Returns the width of the table\&.
.IP o 
\fBunsigned nColumns() const\fP:
.br 
Returns the table\&'s number of columns\&.
.IP o 
\fBstd::ostream &out() const\fP:
.br 
Returns the \fBstd::ostream\fP into which the table is inserted\&.

.PP 
.SH "VIRTUAL MEMBER FUNCTIONS"

.PP 
The following member functions may be overridden in derived classes\&. There
default implementations are given together with their prototypes, below:
.PP 
.IP o 
\fBvirtual void hline(unsigned row) const\fP:
.br 
This member is called just before the indicated row (offset, not
number) is inserted into the \fBstd::ostream\fP\&. Its line number is presented
as a line-reference\&. Its intended task is to write a (partial) horizontal
line either before the first row (row == 0) or between two rows of the table\&. 
By default it performs no actions\&.
.IP o 
\fBvirtual void hline() const\fP:
.br 
This member is called when the table\&'s last line has been inserted 
into the \fBstd::ostream\fP\&. Its intended task is to write a (partial) horizontal
line at the end of the table\&.
By default it performs no actions\&.
.IP o 
\fBvirtual void vline(unsigned col) const\fP:
.br 
This member is called just before the indicated column element
(offset, not number) is inserted into the \fBstd::ostream\fP\&. Its column number
is presented as a reference\&. Its intended task is to write a separator either
before the first element of a row (col == 0) or between two subsequent
elements in the table\&'s rows\&. By default it inserts one blank space\&.
.IP o 
\fBvirtual void vline() const\fP:
.br 
This member is called once the last element in a row 
has been inserted 
into the \fBstd::ostream\fP\&. Its intended task is to write a line separator,
terminating a line of the table\&.
By default it inserts a new-line (\fI\en\fP) character\&.

.PP 
.SH "EXAMPLE"
To do
.PP 
.SH "FILES"
\fIbobcat/tableSupport\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7), \fBtable\fP(3bobcat)
.PP 
.SH "BUGS"
None Reported\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.10\&.0-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.10\&.0-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.10\&.0-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
Academic Free Licence\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
