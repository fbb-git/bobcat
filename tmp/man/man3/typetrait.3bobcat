.TH "FBB::TypeTrait" "3bobcat" "2005-2007" "libbobcat1-dev_1\&.14\&.1-x\&.tar\&.gz" "Error handler"

.PP 
.SH "NAME"
FBB::TypeTrait \- shortdesc
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/typetrait>\fP
.br 

.PP 
.SH "DESCRIPTION"

.PP 
\fBFBB::TypeTrait\fP is a traits class\&. It does not define any member
functions or data members, but only types\&. It can be used to determine the
basic type and other characteristics of (const) plain, (const) pointer or
(const) reference types\&. It is used, e\&.g\&., by the \fBFBB::FnWrap*\fP family of
template classes and was designed after Alexandrescu\&'s (2001) \fITypeTraits\fP
template class\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
-
.PP 
.SH "TYPE"

.PP 
.IP o 
\fIPlain\fP: the plain type of any const or non-const plain, pointer or
reference type\&. 

.PP 
.SH "BOOL VALUES"

.PP 
.IP o 
\fIisPointer\fP: \fItrue\fP if the template type argument represents a
pointer type, \fIfalse\fP otherwise\&.
.IP o 
\fIisConst\fP: \fItrue\fP if the template type argument represents a
const type, \fIfalse\fP otherwise\&.
.IP o 
\fIisRef\fP: \fItrue\fP if the template type argument represents a
reference type, \fIfalse\fP otherwise\&.

.PP 
.SH "EXAMPLE"

.PP 
The following example shows a fragment of the code used in the
\fBFBB::FnWrap1\fP class determining the basic type of its \fIType\fP template
parameter: 
.nf 

    #include <bobcat/typetrait>
    \&.\&.\&.
    template <typename Type, typename ReturnType = void>
    class FnWrap1
    {
        \&.\&.\&.
        public:
            typedef typename TypeTrait<Type>::Plain  argument_type;
        \&.\&.\&.
    };
        
.fi 
The above code could have used \fITypeTrait<Type>::isPointer\fP to determine
whether \fIType\fP actually represents a pointer type\&.    
.PP 
.SH "FILES"
\fIbobcat/typetrait\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7)
.br 
Alexandrescu A\&. (2001) \fBModern C++ Design\fP, Addison-Wesley, Boston\&.
.PP 
.SH "BUGS"
None Reported\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.14\&.1-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.14\&.1-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.14\&.1-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.14\&.1-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.14\&.1-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
GNU General Public License (GPL)\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
