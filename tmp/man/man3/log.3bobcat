.TH "FBB::Log" "3bobcat" "2005-2006" "libbobcat1-dev_1\&.10\&.0-x\&.tar\&.gz" "Log messages"

.PP 
.SH "NAME"
FBB::Log \- \fBstd::ostream\fP handling log messages
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/log>\fP
.br 
Linking option: \fI-lbobcat\fP 
.PP 
.SH "DESCRIPTION"

.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
\fBstd::ostream\fP
.PP 
.SH "ENUMERATIONS"

.PP 
The enumeration \fBTimeStamps\fP is defined in the namespace \fBFBB\fP,
primarily for initializing \fBFBB::LogBuffer\fP objects\&. It is used with
\fBFBB::Log\fP members as well\&. It has the following values:
.IP o 
\fBNOTIMESTAMPS\fP:
.br 
Log-messages will not have timestamps prepended to them\&.
.IP o 
\fBTIMESTAMPS\fP:
.br 
Log-messages will have timestamps prepended to them\&.

.PP 
The enumeration \fBLogManipulator\fP is used to handle special or
exceptional situations through manipulators\&. It is defined in the namespace
\fBFBB\fP and has the following two values:
.IP o 
\fBFATAL\fP:
.br 
This value may be inserted into an \fBFBB::Log\fP object to throw an
\fBFBB::Errno\fP exception (see \fBoperator<<()\fP below);
.IP o 
\fBnl\fP:
.br 
This value may be inserted into an \fBFBB::Log\fP object to terminate
the current line\&. It will \fInot\fP cause the next line to begin with a
time stamp (if applicable) and the current \fImessage level\fP cannot be
modified using a \fBlevel\fP(3bobcat) manipulator\&. It is used to allow a single 
log message to occupy multiple textual lines\&.

.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBLog(char const *delim = " ")\fP:
.br 
The default constructor creates a \fBFBB::Log\fP object which isn\&'t yet
associated with a stream to log messages on\&. The member \fBopen()\fP (see below)
may be used to define such a stream\&.  By default, all messages will have a
time stamp prepended to them (see the description of the member
\fBsetTimestamp()\fP below)\&. The parameter \fBdelim\fP is inserted immediately
beyond the time stamp\&. If a delimiter is inappropriate, an empty string or a
0-pointer may be specified\&.
.IP o 
\fBLog(std::ostream &out, char const *delim = " ")\fP:
.br 
This constructor creates a nbf(FBB::Log) object logging its messages
to the provided \fIstd::ostream\fP object\&. By default, all messages will have a
time stamp prepended to them (see the description of the member
\fBsetTimestamp()\fP below)\&.  The parameter \fBdelim\fP is inserted immediately
beyond the time stamp\&. If a delimiter is inappropriate, an empty string or a
0-pointer may be specified\&.
.IP o 
\fBFBB::Log(std::string const &filename,
std::ios::openmode mode = std::ios::out | std::ios::app, 
char const *delim = " ")\fP:
.br 
This constructor creates a \fBFBB::Log\fP object logging its messages to
the named file\&. If \fIfilename == "&1"\fP the logmessages will be written to the
standard output stream\&. If \fIfilename == "&2"\fP the logmessages will be
written to the standard error stream\&.  By default the file is created if not
existing, and all messages are appended to the stream\&.  By default, all
messages will have a time stamp prepended to them (see the description of the
member \fBsetTimestamp()\fP below)\&.  The parameter \fBdelim\fP is inserted
immediately beyond the time stamp\&. If a delimiter is inappropriate, an empty
string or a 0-pointer may be specified\&.
The copy constructor is not available\&.
.PP 
.SH "MEMBER FUNCTIONS"
All members of \fBstd::ostream\fP are available, as \fBFBB::Log\fP inherits
from this class\&.
.IP o 
\fBstd::ostream &level(unsigned useLevel)\fP:
.br 
This member defines a log-level\&. Messages will be inserted into
the stream when \fIuseLevel\fP is equal to or exceeds the level set by
\fBsetLevel()\fP\&. The maximum level which can be selected is \fBUNIT_MAX\fP\&. If
not even such messages should be inserted into the \fBostream\fP, then the
stream should be deactivated, using \fBoff()\fP, see below\&. The selected level
remains active until redefined\&. Alternatively, the \fBFBB::level\fP manipulator
may be inserted into an (empty) \fBFBB::Log\fP object (see \fBlevel\fP(3bobcat))\&.
.IP o 
\fBvoid off()\fP:
.br 
Prevents any log messages from being generated\&. It may be cancelled by
\fBsetLevel()\fP (see below)\&.
.IP o 
\fBvoid open(std::string const &filename,
std::ios::openmode mode = std::ios::out | std::ios::app, 
char const *delim = " ")\fP:
.br 
This member (re)associates an \fBFBB::Log\fP object with the named
file\&. If \fIfilename == "&1"\fP the logmessages will be written to the standard
output stream\&. If \fIfilename == "&2"\fP the logmessages will be written to the
standard error stream\&.  By default the file is created if not existing, and
all messages are appended to the stream\&.  By default, all messages will have a
time stamp prepended to them (see the description of the member
\fBsetTimestamp()\fP below)\&.  The parameter \fBdelim\fP is inserted immediately
beyond the time stamp\&. If a delimiter is inappropriate, an empty string or a
0-pointer may be specified\&.
.IP o 
\fBvoid setLevel(unsigned newLevel)\fP:
.br 
Redefines the internal message level\&. Messages having at least
level \fInewLevel\fP will be written\&. If the member is used without explicit
argument, logging is suspended\&.
.IP o 
\fBvoid setTimestamp(FBB::TimeStamps stamp, char const *delim = " ")\fP:
.br 
The member function (de)activates time stamp prepending\&. Use the value
\fBFBB::TIMESTAMPS\fP to prepend time stamps, \fBFBB::NOTIMESTAMPS\fP suppresses
time stamps\&.  A timestamp consists of the month, the day number of the month
and the (local) time of the current message, as usually appearing in messages
in \fI/var/log\fP files\&. E\&.g\&., \fIAug 5 13:52:23\fP\&. The parameter \fBdelim\fP is
inserted immediately beyond the time stamp\&. If a delimiter is inappropriate,
an empty string or a 0-pointer may be specified\&. When \fBstamps ==
FBB::NOTIMESTAMPS delim\fP is ignored\&.

.PP 
.SH "STATIC MEMBER"
.IP o 
\fBFBB::Log &initialize(std::string const &filename,
std::ios::openmode mode = std::ios::out | std::ios::app, 
char const *delim = " ")\fP:
.br 

.IP 
Returns a reference to a static \fBFBB::Log\fP object\&. It may only be
called once, or an \fIFBB::Errno\fP exception is thrown\&. It associates a static
\fBFBB::Log\fP object with the named file\&. If \fIfilename == "&1"\fP the
logmessages will be written to the standard output stream\&. If \fIfilename ==
"&2"\fP the logmessages will be written to the standard error stream\&.  By
default the file is created if not existing, and all messages are appended to
the stream\&.  By default, all messages will have a time stamp prepended to them
(see the description of the member \fBsetTimestamp()\fP below)\&.  The parameter
\fBdelim\fP is inserted immediately beyond the time stamp\&. If a delimiter is
inappropriate, an empty string or a 0-pointer may be specified\&.
.IP o 
\fBFBB::Log &getInstance()\fP:
.br 
Returns a reference to a static \fBFBB::Log\fP object, available after
calling \fBLog::initialize()\fP\&. If called before \fILog::initialize()\fP
an \fIFBB::Errno\fP exception is thrown\&. 

.PP 
.SH "OVERLOADED OPERATOR"
The following overloaded operator is defined outside of the \fBFBB\fP
namespace\&. It may be used to insert an \fBFBB::LogManipulator\fP into an
\fBFBB::Log\fP object\&. If the overloaded operator is used in combination with
another type of object it performs no actions\&.
.IP o 
\fBstd::ostream &::operator<<(std::ostream &str, FBB::LogManipulator)\fP:
.br 
When inserting \fBFBB::FATAL\fP an \fBFBB::Errno\fP exception is thrown;
when inserting \fBFBB::nl\fP the line is terminated, but next insertions will
not start with a time stamp (if applicable)\&. 

.PP 
.SH "EXAMPLE"
To do
.PP 
.SH "FILES"
\fIbobcat/log\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7), \fBerrno\fP(3bobcat), \fBlevel\fP(3bobcat),
\fBlogbuffer\fP(3bobcat)
.PP 
.SH "BUGS"
None reported
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.10\&.0-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.10\&.0-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.10\&.0-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
Academic Free Licence\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
