.TH "FBB::OFdStreambuf" "3bobcat" "2005-2006" "libbobcat1-dev_1\&.10\&.0-x\&.tar\&.gz" "File Descriptor Output Stream Buffer"

.PP 
.SH "NAME"
FBB::OFdStreambuf \- Output stream buffer initialized by a file descriptor
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/ofdstreambuf>\fP
.br 
Linking option: \fI-lbobcat\fP 
.PP 
.SH "DESCRIPTION"
\fBFBB::OFdStreambuf\fP objects may be used as a \fBstd::streambuf\fP of
\fIstd::ostream\fP objects to allow extractions from a file descriptor\&.
.PP 
File descriptors are not defined within the context of \fBC++\fP,
but they can be used on operating systems that support the concept\&. Realize
that using file descriptors introduces operating system dependencies\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
\fBstd::streambuf\fP
.PP 
.SH "ENUMERATION"
The public enumeration \fBMode\fP defined in the class \fBFBB::OFdStreamBuf\fP
has the following values:
.IP o 
\fBCLOSE_FD\fP, indicating that the file descriptor used by the object
must be closed;
.IP o 
\fBKEEP_FD\fP (the default) indicating that the file descriptor used by
the object must not be closed\&.

.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBOfdstreambuf()\fP:
.br 
This constructor initializes the streambuf, without associating it to
a file descriptor, and without using buffering\&. The member \fBopen()\fP can be
used to associate the object later on with a file descriptor and optionally a
buffer size\&.  When the object is destroyed or if the mode-less overloaded
version of the \fBopen\fP member is called, the file descriptor will be closed\&.
.IP 
.IP o 
\fBOfdstreambuf(Mode mode)\fP:
.br 
This constructor initializes the streambuf, without associating it to
a file descriptor, and without using buffering\&. The member \fBopen()\fP can be
used to associate the object later on with a file descriptor and optionally a
buffer size\&.  When the object is destroyed or if the mode-less
overloaded version of the \fBopen\fP member is called, the \fBMode\fP argument
determines whether the file descriptor will be closed or will remain open\&.
.IP 
.IP o 
\fBOFdStreambuf(int fd, unsigned n = 1)\fP:
.br 
This constructor initializes the streambuf, associating it to file
descriptor \fIfd\fP, and an optional unget buffer size (by default having size
1)\&.  When  \fBopen\fP is called subsequently, or if the object is destroyed
the provided file descriptor will be closed\&.
.IP 
.IP o 
\fBOFdStreambuf(int fd, unsigned n = 1)\fP:
.br 
This constructor initializes the streambuf, associating it to file
descriptor \fIfd\fP, and an optional unget buffer size (by default having size
1)\&.  When the object is destroyed or if the mode-less overloaded version of
the \fBopen\fP member is called, the file descriptor will be closed\&.
.IP 
.IP o 
\fBOFdStreambuf(int fd, Mode mode, unsigned n = 1)\fP:
.br 
This constructor initializes the streambuf, associating it to file
descriptor \fIfd\fP, and an optional unget buffer size (by default having size
1)\&.  When the object is destroyed or if the mode-less overloaded version of
the \fBopen\fP member is called, the \fBMode\fP argument determines whether the
file descriptor will be closed or will remain open\&.
There is no copy constructor\&.
.PP 
.SH "MEMBER FUNCTIONS"
All members of \fBstd::streambuf\fP are
available, as \fBFBB::OFdStreambuf\fP inherits from this class\&. Some of the
\fBstd::streambuf\fP\&'s member are overridden by \fBFBB::OFdStreambuf\fP, see
below\&. 
.IP o 
\fBvoid open(int xfd, unsigned n = 1)\fP:
.br 
This member (re)initializes the streambuf, using file
descriptor \fIfd\fP, and an optional unget buffer size (by default having size
1)\&. When called repeatedly, the \fBMode\fP specification used whem the object
was constructed determines whether the file descriptor will be closed or will
remain open\&.
.IP o 
\fBvoid open(int xfd, Mode mode, unsigned n = 1)\fP:
.br 
This member (re)initializes the streambuf, using file
descriptor \fIfd\fP, a file descriptor closing parameter and an optional unget
buffer size (by default having size 1)\&. Depending on the \fBMode\fP argument the
object\&'s currently used file descriptor will be closed or will remain open\&.
.IP o 
\fBint overflow(int c)\fP:
.br 
This member \fIoverrides\fP the \fBstd::streambuf\fP member\&. It is
called by \fIstd::ostream\fP objects using \fBOFdStreambuf\fP\&. It calls
\fIsync()\fP, an then it puts the next available character into the buffer\&. It
returns the inserted character\&.
.IP o 
\fBint sync()\fP:
.br 
: 
.br 
This member \fIoverrides\fP the \fBstd::streambuf\fP member\&. It writes
the buffer to the device associated with the file descriptor, and returns 0\&.
Note that there is no overloaded assignment operator available for this
class\&. 
.PP 
.SH "EXAMPLE"
To do
.PP 
.SH "FILES"
\fIbobcat/ofdstreambuf\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7), \fBifdstreambuf\fP(3bobcat), \fBofdstream\fP(3bobcat)), 
\fBstd::streambuf\fP
.PP 
.SH "BUGS"
Starting with bobcat version 1\&.7\&.0, open file descriptors will be closed
when the object is destroyed or if the object is re-opened\&. Note that this
differs from earlier implementations, in which the file descriptor remained
open\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.10\&.0-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.10\&.0-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.10\&.0-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
Academic Free Licence\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
