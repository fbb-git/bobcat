.TH "FBB::Selector" "3bobcat" "2005-2006" "libbobcat1-dev_1\&.10\&.0-x\&.tar\&.gz" "Timed Delays, Multiple File I/O"

.PP 
.SH "NAME"
FBB::Selector \- Timed delays, Alarms and Multiple File I/O\&.
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/selector>\fP
.br 
Linking option: \fI-lbobcat\fP 
.PP 
.SH "DESCRIPTION"
\fBFBB::Selector\fP objects are wrappers around the \fBselect()\fP(2) system
calls and allow timed delays, alarm functionality and/or multiple file I/O\&. It
requires the use of \fIfile descriptors\fP, which are not an official part of
\fBC++\fP\&. However, most operating systems offer \fIfile descriptors\fP\&. Sockets
are well-known file descriptors\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
-
.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBSelector()\fP:
.br 
This constructor initializes the object\&.
.IP o 
\fBSelector(Selector const &other) throw()\fP:
.br 
The standard copy constructor is available\&.

.PP 
.SH "MEMBER FUNCTIONS"
.IP o 
\fBvoid addExceptFd(int fd)\fP:
.br 
Adds a filedescriptor to the set of file descriptors that are
monitored for exceptions (note these are not \fBC++\fP exceptions\&. See \fBman 2
select\fP for details)\&.
.IP o 
\fBvoid addReadFd(int fd)\fP:
.br 
Adds a filedescriptor to the set of file descriptors that are
monitored for reading\&.
.IP o 
\fBvoid addWriteFd(int fd)\fP:
.br 
Adds a filedescriptor to the set of file descriptors that are
monitored for writing\&.
.IP o 
\fBint exceptFd()\fP:
.br 
Returns -1 of no more file descriptors are
available in the \fIexception\fP category\&. Otherwise the next available file
descriptor in the \fIexception\fP category is returned\&. Returning from
\fBwait()\fP, this function can be called repeatedly until -1 is returned,
servicing each available filedescriptor in turn\&.
.IP o 
\fBvoid noAlarm()\fP:
.br 
This member prevents any timeout-alarm from occurring\&.
.IP o 
\fBint nReady()\fP:
.br 
Returns the number of available file descriptors\&.  0 is returned at a
timeout, -1: is returned when \fIselect\fP(2) itself failed\&.
.IP o 
\fBint readFd()\fP:
.br 
Returns -1 of no more file descriptors are available for
reading\&. Otherwise the next available file descriptor for reading is
returned\&. Returning from \fBwait()\fP, this function can be called repeatedly
until -1 is returned, servicing each available filedescriptor in turn\&.
.IP o 
\fBvoid rmExceptFd(int fd)\fP:
.br 
Removes a filedescriptor from the set of file descriptors that are
monitored for exceptions (note these are not \fBC++\fP exceptions\&. See \fBman 2
select\fP for details)\&.
.IP o 
\fBvoid rmReadFd(int fd)\fP:
.br 
Removes a filedescriptor from the set of file descriptors that are
monitored for reading\&.
.IP o 
\fBvoid rmWriteFd(int fd)\fP:
.br 
Removes a filedescriptor from the set of file descriptors that are
monitored for writing\&.
.IP o 
\fBvoid setAlarm(int sec, int usec = 0)\fP:
.br 
This member sets the alarm at the indicated seconds and
milli-seconds\&. If no action occurred on one of the monitored file
descriptions, \fIwait()\fP will return with \fInREady()\fP returning 0\&.
.IP o 
\fBint wait()\fP:
.br 
This member should be called to wait for activities on the installed
file descriptors or timeout-period\&. The members \fInReady()\fP and \fIget\&.\&.\&.()\fP
show their defined behaviors only after \fBwait()\fP has returned\&.  It throws an
\fBFBB::Errno\fP exception when \fIselect()\fP fails, which may very well indicate
the end of any available input\&.
.IP o 
\fBint writeFd()\fP:
.br 
Returns -1 of no more file descriptors are available for
writing\&. Otherwise the next available file descriptor for writing is
returned\&. Returning from \fBwait()\fP, this function can be called repeatedly
until -1 is returned, servicing each available filedescriptor in turn\&.

.PP 
.SH "EXAMPLE"
To do
.PP 
.SH "FILES"
\fIbobcat/selector\fP - defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7), \fBselect\fP(2)
.PP 
.SH "BUGS"
None Reported\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_1\&.10\&.0-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_1\&.10\&.0-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_1\&.10\&.0-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1-dev_1\&.10\&.0-x_i386\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\&'s Own Base Classes And Templates\&'\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
Academic Free Licence\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
