#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

# -Wall is always used by bobcat's build script, -O2 and -g are defined by
# INSTALL.im, see that file for details
CPPFLAGS = -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CPPFLAGS += -O0
else
	CPPFLAGS += -O2
endif

build: build-indep build-arch
build-indep:
build-arch: build-stamp
build-stamp:
	dh_testdir
	# Add here commands to compile the package.
	./build libraries all
	./build man
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	./build clean
	dh_clean

install: build-arch
	dh_testdir
	dh_testroot
	dh_clean
	dh_installdirs
	./build install debian/libbobcat2 debian/libbobcat-dev

binary-indep:

binary-arch: build-arch install
	dh_testdir
	dh_testroot
	dh_installchangelogs -A changelog
	dh_installdocs
#	dh_installexamples
#	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_makeshlibs -V -- -c0
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# The following is for internal development usage only
# Update that sum when new _upstream_ releases occur, this
# catches silent file content forges at the upstream server side

# archive downloaded from https://www.icce.rug.nl/debian/bobcat
# (bobcat_x.y.z..tar.gz)

MD5TRUSTED := 2a5f7815df1157abc48c1a2bc516484b

DEBVERSION:=$(shell head -n 1 debian/changelog | sed -e 's/^[^(]*(\([^)]*\)).*/\1/')
UPVERSION:=$(shell echo $(DEBVERSION) | sed -e 's/^.*://' -e 's/-[0-9.]*$$//' -e 's/.dfsg$$//')
UPNAME := bobcat
UPFILE := $(UPNAME)_$(UPVERSION).tar.gz
DEFILE := $(UPNAME)_$(UPVERSION).orig.tar.gz
URL		   := https://www.icce.rug.nl/debian/bobcat
MD5CURRENT := `md5sum ../tarballs/$(DEFILE) | sed -e 's/ .*//'`
SVNTRUNK   := https://svn.sourceforge.net/svnroot/bobcat/trunk/bobcat

get-orig-source:
	@@[ -d ../tarballs/. ]||mkdir -p ../tarballs

	-@if [ ! -f ../tarballs/$(DEFILE) ] ; then \
	echo "Downloading $(URL)/$(UPFILE) from $(URL)/$(UPFILE) ..." ; \
	wget --no-check-certificate --quiet -nv -T20 -t3 -O \
	../tarballs/$(DEFILE) $(URL)/$(UPFILE) ; \
	else \
	echo "Upstream source tarball has already been downloaded" ; \
	fi

	-@if [ "$(MD5CURRENT)" != "$(MD5TRUSTED)" ] ; then \
	echo "Expecting upstream filename md5sum $(MD5TRUSTED), but $(MD5CURRENT) found" ; \
	echo "Upstream filename md5sum is NOT trusted! Possible upstream filename forge!" ; \
	false ; \
	else \
	echo "Upstream filename md5sum is trusted!" ; \
	fi


get-svn-trunk:
	@@[ -d ../tarballs/. ]||mkdir -p ../tarballs
	rm -rf ../tarballs/$(DEFILE) ../tarballs/bobcat-svn-trunk
	svn --force export $(SVNTRUNK) ../tarballs/bobcat-svn-trunk
	@@if [ -d ../tarballs/bobcat-svn-trunk/debian ] ; then rm -rf ../tarballs/bobcat-svn-trunk/debian; fi
	@@ echo Building the SVN TRUNK tarball in ../tarballs/$(DEFILE)
	@@GZIP=-9 tar -b1 -czf ../tarballs/$(DEFILE) -C ../tarballs bobcat-svn-trunk
	rm -rf ../tarballs/bobcat-svn-trunk


print-version:
	@@echo "Debian version:   $(DEBVERSION)"
	@@echo "Upstream version: $(UPVERSION)"


binary: binary-indep binary-arch
.PHONY: clean build build-indep build-arch binary-indep binary-arch binary install
