includefile(header.inc)

COMMENT(manpage, section, releasedate, archive, short name)
manpage(FBB::MailHeaders)(3bobcat)(_CurYrs_)(libbobcat1-dev__CurVers_-x.tar.gz)
                    (SMTP Mail Headers)

manpagename(FBB::MailHeaders)(Handles SMTP Mail Headers)

manpagesynopsis()
    bf(#include <bobcat/mailheaders>)nl()
    Linking option: tt(-lbobcat) 

manpagedescription()

    bf(FBB::MailHeaders) objects extract header lines from e-mail. Reading
stops at (and including) the first blank line, which becomes the last element
of the bf(FBB::MailHeaders) object, interpreted as a bf(vector). The actual
e-mail content is therefore left unread on the file containing the e-mail.

    Each line stored in a bf(MailHeaders) object represents a complete header
line. Headers continuing over multiple input lines are concatenated at a
single element of bf(MailHeaders) objects. They are separated from each other
by newline (tt(\n)) characters. The last line to join a multi-line header is
not terminated by a newline character.

includefile(namespace.inc)

manpagesection(INHERITS FROM)
    bf(std::vector<std::string>)

manpagesection(ENUMERATIONS)
    The following enumerations and enumeration values can be used with the
class bf(FBB::MailHeaders):

    bf(enum Mode)nl()
    This enumeration defines two values:
    itemization(
    itb(READ)
        When this value is specified at construction time, e-mail is
immediately read by the constructor.
    itb(DONT_READ)
        When this value is specified at construction time, e-mail is read
using the tt(read()) member (see below).
    )

    bf(enum Match)nl()
    This enumeration defines the following values:
    itemization(
    itb(FULL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the
headers must exactly match a specified header name.
    itb(INITIAL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the
initial part of the headers must match the specified header text.
    itb(PARTIAL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the 
headers must contain the specified header text.
    itb(CASE_FULL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the
headers must exactly match a specified header name. The matching is performed
case insensititvely.
    itb(CASE_INITIAL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the
initial part of the headers must match the specified header text. The matching
is performed case insensititvely.
    itb(CASE_PARTIAL)
    Used by the tt(setHeaderIterator()) (see below) to indicate that the
headers must contain the specified header text. The matching is performed case
insensititvely.
    )

manpagesection(NESTED TYPES)

    The class tt(MailHeaders) defines the following types:
    itemization(
    itb(const_hdr_iterator)
    An input iterator iterating over the headers selected by the member
tt(setHeaderIterator()) (see below)
    itb(const_reverse_hdr_iterator)
    An input iterator reversely iterating over the headers selected by the
member tt(setHeaderIterator()) (see below)
    )
    Objects of these two iterator types point to header lines. Their
derefenced types are tt(std::string const).

manpagesection(CONSTRUCTOR)
    itemization(
    itb(MailHeaders(std::istream &in, Mode mode = READ)) 
    This constructor defines the file containing the e-mail to be
processed. The second parameter is by default bf(MailHeaders::READ), causing
the object to start reading the e-mail immediately. If set to
bf(MailHeaders::DONT_READ), the e-mail is not read. In that case the member
tt(read()) can be called to process the e-mail later.
    )
    The copy constructor is available.

manpagesection(MEMBER FUNCTIONS)
     All members of bf(std::vector<std::string>) are available, as
bf(FBB::MailHeaders) inherts from this class.

    itemization(
    itb(void read()) 
    Reads the mail-headers from the file passed to the bf(FBB::MailHeaders)
object's constructor. An bf(FBB::Errno) object is thrown if the mailheaders
were already read or if the file is incomplete (i.e., the (obligatory) blank
line wasn't found).
     itb(void setHeaderIterator(std::string const &header, Match match = FULL))
    Sets the header-iterators to the specified tt(header). The parameter
tt(match) defines the match-type to use when selecting headers. The default
bf(FBB::MailHeaders::FULL), indicates that the text provided in
tt(header) must match exactly an e-mail header. nl()
    When matching headers the
colon terminating the header is em(not) considered and should therefore
em(not) be specified by tt(setHeaderIterator()). nl()
    Alternative matching strategies are used when other values of 
the enumeration bf(FBB::Match) are specified.nl()
    The member tt(setHeaderIterator()) em(must) have been called at least once
or the members tt(beginh()) and tt(rendh()) will throw an bf(FBB::Errno)
exception. An bf(FBB::Errno) exception is also thrown if
tt(setHeaderIterator()) is called when no mail headers are available.
    itb(const_hdr_iterator beginh() const)
    Returns the begin-iterator 
corresponding to the first header selected by the 
tt(setHeaderIterator()) member.
Note that the member function's name ends in tt(h), to
distinguish it from the tt(vector<string>::begin()) member. 
    itb(const_hdr_iterator endh() const)
    Returns the end-iterator matching tt(beginh()).
Note that the member function's name ends in tt(h), to
distinguish it from the tt(vector<string>::end()) member. 
    itb(const_reverse_hdr_iterator rbeginh() const)
    Returns the reversed begin-iterator 
corresponding to the last header selected by the 
tt(setHeaderIterator()) member.
Note that the member function's name ends in tt(h), to
distinguish it from the tt(vector<string>::rbegin()) member. 
    itb(const_reverse_hdr_iterator endh() const)
    Returns the reversed end-iterator matching tt(rbeginh()).
Note that the member function's name ends in tt(h), to
distinguish it from the tt(vector<string>::rend()) member. 
    )

manpagesection(EXAMPLE)
    The following example shows the normal use of these members:
        verb(
                // create a MailHeader object
    MailHeaders mh(cin, MailHeaders::DONT_READ);

    try
    {           // read the headers
        mh.read();
    }
    catch (Errno &err)
    {
        cout << err.what() << endl;
    }

    cout << "There are " << mh.size() << " header lines\n";

                // look for the Received: headers    
    mh.setHeaderIterator("Received");

                // show the Received headers
    copy(mh.beginh(), mh.endh(), 
            ostream_iterator<std::string const>(cout, "\n"));
    )

manpagefiles()
    em(bobcat/mailheaders) - defines the class interface

manpageseealso()
    bf(bobcat)(7)

manpagebugs()
    None Reported.

includefile(trailer.inc)
